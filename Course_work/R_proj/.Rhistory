geom_point(data = as.data.frame(fit_k_means$centers), aes(x,y), pch = 10, size = 7, col = "black")
set.seed(1234)
n <- 20
# Первый кластер
x1 <- rnorm(n, 0, 0.20)
y1 <- rnorm(n, 0, 0.20)
# Второй кластер
x2 <- rnorm(n-3, 0.6, 0.25)
y2 <- rnorm(n-3, 0.6, 0.25)
# Выборсы для второго кластера
x2_outliers <- rnorm(3, 1, 0.1)
y2_outliers <- rnorm(3, 3, 0.1)
x2 <- c(x2, x2_outliers)
y2 <- c(y2, y2_outliers)
df <- data.frame(x = c(x1,x2), y = c(y1,y2),
clus = factor(c(rep(1,n), rep(3,n-3), rep(2,3)), labels = c("1 clus", "2d clus outliers", "2nd clus")))
# Верно раскрашенные данные
ggplot(df, aes(x,y, color = clus)) + geom_point() + labs(color = "K-means clusters") +
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA))
# k-means
fit_k_means <- kmeans(df[,-3], 2)
ggplot(df, aes(x,y, color = as.factor(fit_k_means$cluster))) + geom_point() +
labs(color = "K-means clusters")+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA)) +
geom_point(data = as.data.frame(fit_k_means$centers), aes(x,y), pch = 10, size = 7, col = "black")
ggplot(df, aes(x,y, color = as.factor(fit_k_medoids$clustering))) + geom_point() +
labs(color = "K-medoids clusters")+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA)) +
geom_point(data = as.data.frame(fit_k_medoids$medoids), aes(x,y), pch = 19, size = 4, col = "black")
# k-medoids
fit_k_medoids <- pam(df[,-3], 2)
ggplot(df, aes(x,y, color = as.factor(fit_k_medoids$clustering))) + geom_point() +
labs(color = "K-medoids clusters")+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA)) +
geom_point(data = as.data.frame(fit_k_medoids$medoids), aes(x,y), pch = 19, size = 4, col = "black")
real_clusters <- as.numeric(df$clus)
real_clusters[real_clusters == 3] <- 2
# k-means
old <- c(2,1)
new <- c(1,2)
# k-means
k_means_clusters <- fit_k_means$cluster
confusionMatrix(table(k_means_clusters, real_clusters))
# k-medoids
k_medoids_clusters <- fit_k_medoids$clustering
confusionMatrix(table(k_medoids_clusters, real_clusters))
table(k_medoids_clusters, real_clusters)
table(k_means_clusters, real_clusters)
# Верно раскрашенные данные
ggplot(df, aes(x,y, color = clus)) + geom_point() + labs(color = "K-means clusters") +
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA))
png(filename = "../img/k-medoids/initial_data.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df, aes(x,y, color = clus)) + geom_point() + labs(color = "K-means clusters") +
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA))
dev.off()
png(filename = "../img/k-medoids/initial_data.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df, aes(x,y, color = clus)) + geom_point() + labs(color = "K-means clusters") +
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA))
dev.off()
png(filename = "../img/k-medoids/basic_k-means_clusters.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df, aes(x,y, color = as.factor(fit_k_means$cluster))) + geom_point() +
labs(color = "K-means clusters")+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA)) +
geom_point(data = as.data.frame(fit_k_means$centers), aes(x,y), pch = 10, size = 7, col = "black")
dev.off()
png(filename = "../img/k-medoids/basic_k-means_clusters.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df, aes(x,y, color = as.factor(fit_k_medoids$clustering))) + geom_point() +
labs(color = "K-medoids clusters")+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA)) +
geom_point(data = as.data.frame(fit_k_medoids$medoids), aes(x,y), pch = 19, size = 4, col = "black")
dev.off()
png(filename = "../img/k-medoids/basic_k-means_clusters.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df, aes(x,y, color = as.factor(fit_k_means$cluster))) + geom_point() +
labs(color = "K-means clusters")+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA)) +
geom_point(data = as.data.frame(fit_k_means$centers), aes(x,y), pch = 10, size = 7, col = "black")
dev.off()
png(filename = "../img/k-medoids/basic_k-medoids_clusters.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df, aes(x,y, color = as.factor(fit_k_medoids$clustering))) + geom_point() +
labs(color = "K-medoids clusters")+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA)) +
geom_point(data = as.data.frame(fit_k_medoids$medoids), aes(x,y), pch = 19, size = 4, col = "black")
dev.off()
set.seed(1234)
n <- 20
# Первый кластер
x1 <- rnorm(n, 0, 0.20)
y1 <- rnorm(n, 0, 0.20)
# Второй кластер
x2 <- rnorm(n-3, 0.6, 0.25)
y2 <- rnorm(n-3, 0.6, 0.25)
# Выборсы для второго кластера
x2_outliers <- rnorm(3, 1, 0.1)
y2_outliers <- rnorm(3, 3, 0.1)
x2_full <- c(x2, x2_outliers)
y2_full <- c(y2, y2_outliers)
# Датасет без выбросов
df_reduced <- data.frame(x = c(x1,x2), y = c(y1,y2),
clus = factor(c(rep(1,n), rep(3,n-3)), labels = c("1 clus","2nd clus")))
df_reduced
df_w_outliers <- data.frame(x = c(x1,x2_full), y = c(y1,y2_full),
clus = factor(c(rep(1,n), rep(3,n-3), rep(2,3)), labels = c("1 clus", "2d clus outliers", "2nd clus")))
df_w_outliers
set.seed(1234)
n <- 20
# Первый кластер
x1 <- rnorm(n, 0, 0.20)
y1 <- rnorm(n, 0, 0.20)
# Второй кластер
x2 <- rnorm(n-3, 0.6, 0.25)
y2 <- rnorm(n-3, 0.6, 0.25)
# Выборсы для второго кластера
x2_outliers <- rnorm(3, 1, 0.1)
y2_outliers <- rnorm(3, 3, 0.1)
x2_full <- c(x2, x2_outliers)
y2_full <- c(y2, y2_outliers)
# Датасет без выбросов
df_reduced <- data.frame(x = c(x1,x2), y = c(y1,y2),
clus = factor(c(rep(1,n), rep(3,n-3)), labels = c("1 clus","2nd clus")))
df_w_outliers <- data.frame(x = c(x1,x2_full), y = c(y1,y2_full),
clus = factor(c(rep(1,n), rep(3,n-3), rep(2,3)), labels = c("1 clus", "2d clus outliers", "2nd clus")))
# Верно раскрашенные данные
png(filename = "../img/k-medoids/initial_data.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df_w_outliers, aes(x,y, color = clus)) + geom_point() + labs(color = "K-means clusters") +
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA))
dev.off()
set.seed(1234)
n <- 20
# Первый кластер
x1 <- rnorm(n, 0, 0.20)
y1 <- rnorm(n, 0, 0.20)
# Второй кластер
x2 <- rnorm(n-3, 0.6, 0.25)
y2 <- rnorm(n-3, 0.6, 0.25)
# Выборсы для второго кластера
x2_outliers <- rnorm(3, 1, 0.1)
y2_outliers <- rnorm(3, 3, 0.1)
x2_full <- c(x2, x2_outliers)
y2_full <- c(y2, y2_outliers)
# Датасет без выбросов
df_reduced <- data.frame(x = c(x1,x2), y = c(y1,y2),
clus = factor(c(rep(1,n), rep(3,n-3)), labels = c("1 clus","2nd clus")))
df_w_outliers <- data.frame(x = c(x1,x2_full), y = c(y1,y2_full),
clus = factor(c(rep(1,n), rep(3,n-3), rep(2,3)), labels = c("1 clus", "2d clus outliers", "2nd clus")))
# Верно раскрашенные данные
png(filename = "../img/k-medoids/initial_data.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df_w_outliers, aes(x,y, color = clus)) + geom_point() + labs(color = "K-means clusters") +
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA))
dev.off()
# k-means
fit_k_means <- kmeans(df_w_outliers[,-3], 2)
png(filename = "../img/k-medoids/basic_k-means_clusters.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df_w_outliers, aes(x,y, color = as.factor(fit_k_means$cluster))) + geom_point() +
labs(color = "K-means clusters")+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA)) +
geom_point(data = as.data.frame(fit_k_means$centers), aes(x,y), pch = 10, size = 7, col = "black")
dev.off()
# k-medoids
fit_k_medoids <- pam(df_w_outliers[,-3], 2)
png(filename = "../img/k-medoids/basic_k-medoids_clusters.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df_w_outliers, aes(x,y, color = as.factor(fit_k_medoids$clustering))) + geom_point() +
labs(color = "K-medoids clusters")+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA)) +
geom_point(data = as.data.frame(fit_k_medoids$medoids), aes(x,y), pch = 19, size = 4, col = "black")
dev.off()
real_clusters <- as.numeric(df_w_outliers$clus)
real_clusters[real_clusters == 3] <- 2
# k-means
k_means_clusters <- fit_k_means$cluster
confusionMatrix(table(k_means_clusters, real_clusters))
# k-medoids
k_medoids_clusters <- fit_k_medoids$clustering
confusionMatrix(table(k_medoids_clusters, real_clusters))
# k-means
fit_k_means <- kmeans(df_w_outliers[,-3], 2)
png(filename = "../img/k-medoids/basic_k-means_clusters.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df_w_outliers, aes(x,y, color = as.factor(fit_k_means$cluster))) + geom_point() +
labs(color = "K-means clusters")+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA)) +
geom_point(data = as.data.frame(fit_k_means$centers), aes(x,y), pch = 10, size = 7, col = "black")
dev.off()
# k-medoids
fit_k_medoids <- pam(df_w_outliers[,-3], 2)
png(filename = "../img/k-medoids/basic_k-medoids_clusters.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df_w_outliers, aes(x,y, color = as.factor(fit_k_medoids$clustering))) + geom_point() +
labs(color = "K-medoids clusters")+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA)) +
geom_point(data = as.data.frame(fit_k_medoids$medoids), aes(x,y), pch = 19, size = 4, col = "black")
dev.off()
real_clusters <- as.numeric(df_w_outliers$clus)
real_clusters[real_clusters == 3] <- 2
# k-means
k_means_clusters <- fit_k_means$cluster
confusionMatrix(table(k_means_clusters, real_clusters))
# k-medoids
k_medoids_clusters <- fit_k_medoids$clustering
confusionMatrix(table(k_medoids_clusters, real_clusters))
# k-means
fit_k_means_outliers <- kmeans(df_reduced[,-3], 2)
png(filename = "../img/k-medoids/outliers_k-means_clusters.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df_reduced, aes(x,y, color = as.factor(fit_k_means_outliers$cluster))) + geom_point() +
labs(color = "K-means clusters with outliers")+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA)) +
geom_point(data = as.data.frame(fit_k_means_outliers$centers), aes(x,y), pch = 10, size = 7, col = "black")
dev.off()
# k-medoids
fit_k_medoids_outliers <- pam(df_reduced[,-3], 2)
png(filename = "../img/k-medoids/outliers_k-medoids_clusters.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df_reduced, aes(x,y, color = as.factor(fit_k_medoids_outliers$clustering))) + geom_point() +
labs(color = "K-medoids clusters with outliers")+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA)) +
geom_point(data = as.data.frame(fit_k_medoids_outliers$medoids), aes(x,y), pch = 19, size = 4, col = "black")
dev.off()
real_clusters <- as.numeric(df_reduced$clus)
real_clusters[real_clusters == 3] <- 2
# k-means
k_means_clusters_outliers <- fit_k_means_outliers$cluster
confusionMatrix(table(k_means_clusters_outliers, real_clusters))
# k-medoids
k_medoids_clusters <- fit_k_medoids_outliers$clustering
confusionMatrix(table(k_medoids_clusters_outliers, real_clusters))
k_medoids_clusters_outliers <- fit_k_medoids_outliers$clustering
confusionMatrix(table(k_medoids_clusters_outliers, real_clusters))
png(filename = "../img/k-medoids/initial_data_reduced.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df_reduced, aes(x,y, color = clus)) + geom_point() + labs(color = "K-means clusters") +
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA))
dev.off()
# k-means
fit_k_means_outliers <- kmeans(df_reduced[,-3], 2, algorithm = "MacQueen")
ggplot(df_reduced, aes(x,y, color = as.factor(fit_k_means_outliers$cluster))) + geom_point() +
labs(color = "K-means clusters with outliers")+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA)) +
geom_point(data = as.data.frame(fit_k_means_outliers$centers), aes(x,y), pch = 10, size = 7, col = "black")
# Верно раскрашенные данные
png(filename = "../img/k-medoids/initial_data_reduced.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df_reduced, aes(x,y, color = clus)) + geom_point() + labs(color = "K-means clusters without outliers") +
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA))
dev.off()
# k-means
fit_k_means_outliers <- kmeans(df_reduced[,-3], 2)
png(filename = "../img/k-medoids/outliers_k-means_clusters.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df_reduced, aes(x,y, color = as.factor(fit_k_means_outliers$cluster))) + geom_point() +
labs(color = "K-means clusters without outliers")+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA)) +
geom_point(data = as.data.frame(fit_k_means_outliers$centers), aes(x,y), pch = 10, size = 7, col = "black")
dev.off()
# k-medoids
fit_k_medoids_outliers <- pam(df_reduced[,-3], 2)
png(filename = "../img/k-medoids/outliers_k-medoids_clusters.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df_reduced, aes(x,y, color = as.factor(fit_k_medoids_outliers$clustering))) + geom_point() +
labs(color = "K-medoids clusters without outliers")+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA)) +
geom_point(data = as.data.frame(fit_k_medoids_outliers$medoids), aes(x,y), pch = 19, size = 4, col = "black")
dev.off()
real_clusters <- as.numeric(df_reduced$clus)
real_clusters[real_clusters == 3] <- 2
# k-means
k_means_clusters_outliers <- fit_k_means_outliers$cluster
confusionMatrix(table(k_means_clusters_outliers, real_clusters))
# k-medoids
k_medoids_clusters_outliers <- fit_k_medoids_outliers$clustering
confusionMatrix(table(k_medoids_clusters_outliers, real_clusters))
confusionMatrix(table(k_medoids_clusters, real_clusters), positive = c("precision", "recall"))
confusionMatrix(table(k_medoids_clusters, real_clusters), positive = "precision")
confusionMatrix(table(k_medoids_clusters, real_clusters), positive = T)
confusionMatrix(table(k_medoids_clusters, real_clusters), positive = "prec_recall")
confusionMatrix(table(k_medoids_clusters, real_clusters), positive = "positive")
table(k_medoids_clusters, real_clusters)
confusionMatrix(table(k_medoids_clusters, real_clusters), positive = "positive")
confusionMatrix(table(k_medoids_clusters, real_clusters), positive = "positive")
F_meas(table(k_medoids_clusters, real_clusters))
precision(table(k_medoids_clusters, real_clusters))
recall(table(k_medoids_clusters, real_clusters))
confusionMatrix(table(k_medoids_clusters, real_clusters))
confusionMatrix(table(k_means_clusters, real_clusters))
confusionMatrix(table(k_means_clusters, real_clusters))
confusionMatrix(table(k_means_clusters, real_clusters))
fit_k_means$cluster
# k-medoids
k_medoids_clusters <- fit_k_medoids$clustering
confusionMatrix(table(k_medoids_clusters, real_clusters))
# k-means
k_means_clusters <- fit_k_means$cluster
confusionMatrix(table(k_means_clusters, real_clusters))
real_clusters <- as.numeric(df_reduced$clus)
real_clusters[real_clusters == 3] <- 2
# k-means
k_means_clusters_outliers <- fit_k_means_outliers$cluster
confusionMatrix(table(k_means_clusters_outliers, real_clusters))
# k-medoids
k_medoids_clusters_outliers <- fit_k_medoids_outliers$clustering
confusionMatrix(table(k_medoids_clusters_outliers, real_clusters))
confusionMatrix(table(k_means_clusters_outliers, real_clusters))
confusionMatrix(table(k_medoids_clusters_outliers, real_clusters))
# Случай с выбросами
#----------------------------------------------------------------------------------------------------------------#
# Верно раскрашенные данные
png(filename = "../img/k-medoids/initial_data.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df_w_outliers, aes(x,y, color = clus)) + geom_point() + labs(color = "K-means clusters") +
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA))
dev.off()
# k-means
fit_k_means <- kmeans(df_w_outliers[,-3], 2)
png(filename = "../img/k-medoids/basic_k-means_clusters.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df_w_outliers, aes(x,y, color = as.factor(fit_k_means$cluster))) + geom_point() +
labs(color = "K-means clusters")+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA)) +
geom_point(data = as.data.frame(fit_k_means$centers), aes(x,y), pch = 10, size = 7, col = "black")
dev.off()
# k-medoids
fit_k_medoids <- pam(df_w_outliers[,-3], 2)
png(filename = "../img/k-medoids/basic_k-medoids_clusters.png",
width = 853, height = 707,
res = 96 * 1.25)
ggplot(df_w_outliers, aes(x,y, color = as.factor(fit_k_medoids$clustering))) + geom_point() +
labs(color = "K-medoids clusters")+
theme(panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA)) +
geom_point(data = as.data.frame(fit_k_medoids$medoids), aes(x,y), pch = 19, size = 4, col = "black")
dev.off()
real_clusters <- as.numeric(df_w_outliers$clus)
real_clusters[real_clusters == 3] <- 2
# k-means
k_means_clusters <- fit_k_means$cluster
confusionMatrix(table(k_means_clusters, real_clusters))
# k-medoids
k_medoids_clusters <- fit_k_medoids$clustering
confusionMatrix(table(k_medoids_clusters, real_clusters))
confusionMatrix(table(k_means_clusters, real_clusters))
confusionMatrix(table(k_medoids_clusters, real_clusters))
precision(table(k_means_clusters, real_clusters))
recall(table(k_means_clusters, real_clusters))
p1 <- c(1,1)
p2 <- c(2,1)
p3 <- c(5,5)
p4 <- c(7,5)
p5 <- c(8,6)
df <- c(p1,p2,p3,p4,p5)
df
df <- rbind(p1,p2,p3,p4,p5)
df
plot(df)
plot(df)
5 точек, которые будет кластеризовать
p1 <- c(1,1)
p2 <- c(1,2)
p3 <- c(5,5)
p4 <- c(7,5)
p5 <- c(8,6)
df <- rbind(p1,p2,p3,p4,p5)
plot(df)
5 точек, которые будет кластеризовать
p1 <- c(1,1)
p2 <- c(1,2)
p3 <- c(4,5)
p4 <- c(7,5)
p5 <- c(8,6)
df <- rbind(p1,p2,p3,p4,p5)
plot(df)
5 точек, которые будет кластеризовать
p1 <- c(1,1)
p2 <- c(1,2)
p3 <- c(5,4)
p4 <- c(7,5)
p5 <- c(8,6)
df <- rbind(p1,p2,p3,p4,p5)
plot(df)
5 точек, которые будет кластеризовать
p1 <- c(1,1)
p2 <- c(1,2)
p3 <- c(5,4)
p4 <- c(8,5)
p5 <- c(8,6)
df <- rbind(p1,p2,p3,p4,p5)
plot(df)
5 точек, которые будет кластеризовать
p1 <- c(1,1)
p2 <- c(1,2)
p3 <- c(6,4)
p4 <- c(8,5)
p5 <- c(8,6)
df <- rbind(p1,p2,p3,p4,p5)
plot(df)
h1 <- hclust(df)
h1 <- hclust(df, method = "single")
df
h1 <- hclust(dist(df), method = "single")
plot(h1)
plot(df, xlab = "", ylab = "")
text(df, labels=c("p1", "p2","p3","p4","p5"), cex= 0.7, pos=3)
plot(df, xlab = "", ylab = "")
text(df, labels=c("p1", "p2","p3","p4","p5"), cex= 0.7, pos=-3)
plot(df, xlab = "", ylab = "")
text(df, labels=c("p1", "p2","p3","p4","p5"), cex= 0.7, pos=1)
plot(df, xlab = "", ylab = "")
text(df, labels=c("p1", "p2","p3","p4","p5"), cex= 0.7, pos=2)
plot(df, xlab = "", ylab = "")
text(df, labels=c("p1", "p2","p3","p4","p5"), cex= 0.7)
text(df, labels=c("p1", "p2","p3","p4","p5"), cex= 0.7, pos = c(1,1,1,2,2))
plot(df, xlab = "", ylab = "")
text(df, labels=c("p1", "p2","p3","p4","p5"), cex= 0.7, pos = c(1,1,1,2,2))
plot(df, xlab = "", ylab = "")
text(df, labels=c("p1", "p2","p3","p4","p5"), cex= 0.7, pos = c(3,3,3,1,1))
h1 <- hclust(dist(df), method = "single", xlab = "")
h1 <- hclust(dist(df), method = "single")
plot(h1, xlab = "")
plot(df, xlab = "", ylab = "")
text(df, labels=c("p1", "p2","p3","p4","p5"), cex= 0.7, pos = c(3,3,3,1,1))
png(filename = "../img/hclust/single/initial_data.png",
width = 853, height = 707,
res = 96 * 1.25)
plot(df, xlab = "", ylab = "")
text(df, labels=c("p1", "p2","p3","p4","p5"), cex= 0.7, pos = c(3,3,3,1,1))
dev.off()
plot(df, xlab = "", ylab = "", lwd = 3)
text(df, labels=c("p1", "p2","p3","p4","p5"), cex= 0.7, pos = c(3,3,3,1,1))
plot(df, xlab = "", ylab = "", lwd = 2, pch = 20)
plot(df, xlab = "", ylab = "", lwd = 2, pch = 19)
text(df, labels=c("p1", "p2","p3","p4","p5"), cex= 0.7, pos = c(3,3,3,1,1))
png(filename = "../img/hclust/single/initial_data.png",
width = 853, height = 707,
res = 96 * 1.25)
plot(df, xlab = "", ylab = "", lwd = 2, pch = 19)
text(df, labels=c("p1", "p2","p3","p4","p5"), cex= 0.7, pos = c(3,3,3,1,1))
dev.off()
png(filename = "../img/hclust/single/hclust_euc.png",
width = 853, height = 707,
res = 96 * 1.25)
h1 <- hclust(dist(df), method = "single")
plot(h1, xlab = "")
dev.off()
h1 <- hclust(dist(df), method = "single", hang = -1)
h1 <- hclust(dist(df), method = "single", hang = 0)
h1 <- hclust(dist(df), method = "single", hang = -.1)
h1 <- hclust(dist(df), hang = -1, method = "single")
h1 <- hclust(dist(df), hang = -1)
h1 <- hclust(dist(df), method = "single")
plot(h1, xlab = "", hang = -1)
h1$merge
h1$order
h1$height
png(filename = "../img/hclust/single/hclust_euc_1.png",
width = 853, height = 707,
res = 96 * 1.25)
plot(h1, xlab = "", hang = -1)
dev.off()
sqrt(5)
sqrt(27)
sqrt(28)
sqrt(29)
plot(as.phylo(hc), type = "unrooted", cex = 0.6,
no.margin = TRUE)
library("ape")
plot(as.phylo(hc), type = "unrooted", cex = 0.6,
no.margin = TRUE)
plot(as.phylo(h1), type = "unrooted", cex = 0.6,
no.margin = TRUE)
plot(as.phylo(h1), cex = 0.6,
no.margin = TRUE)
plot(h1, type = "unrooted", cex = 0.6,
no.margin = TRUE)
plot(as.phylo(h1), type = "unrooted", cex = 0.6,
no.margin = TRUE)
# График иерархической кластеризации по методу signle с евклидовой метрикой расстояний
h2 <- hclust(dist(df), method = "complete")
plot(h2, xlab = "", hang = -1)
plot(h2, xlab = "", hang = -1)
plot(h1, xlab = "", hang = -1)
plot(h2, xlab = "", hang = -1)
plot(h1, xlab = "", hang = -1)
plot(h2, xlab = "", hang = -1)
plot(h1, xlab = "", hang = -1)
plot(h2, xlab = "", hang = -1)
