tabl$1
tabl
colnames(tabl)
tabl <- as.matrix(table(my_dat))
tabl
colnames(tabl)
aggregate(my_dat)
aggregate(my_dat, length())
my_dat
aggregate(data.frame(count = mydat), list(value = mydat), length())
aggregate(data.frame(count = my_dat), list(value = my_dat), length())
aggregate(data.frame(count = my_dat), list(value = my_dat), length
aggregate(data.frame(count = my_dat), list(value = my_dat), length)
aggregate(data.frame(count = my_dat), list(value = my_dat), length)
tmp <- aggregate(data.frame(count = my_dat), list(value = my_dat), length)
tmp$count
cumsum(tmp$count)
stat_table <- data.frame(
p_i <- tmp$value,
f_i <- tmp$count,
D_i <- cumsum(tmp$count)
)
stat_table
stat_table <- data.frame(
p_i = tmp$value,
f_i = tmp$count,
D_i = cumsum(tmp$count)
)
stat_table
stat_table_tmp <- data.frame(
p_i = tmp$value,
f_i = tmp$count,
D_i = cumsum(tmp$count)
)
otp_1 <- (stat_table_tmp$p_i-opt1) * stat_table_tmp$D_i
otp_1
stat_table <- data.frame(stat_table,
otp_1,otp_2,otp_3,otp_4,otp_5)
opt_1 <- (stat_table_tmp$p_i-opt1) * stat_table_tmp$D_i
opt_2 <- (stat_table_tmp$p_i-opt2) * stat_table_tmp$D_i
opt_3 <- (stat_table_tmp$p_i-opt3) * stat_table_tmp$D_i
opt_4 <- (stat_table_tmp$p_i-opt4) * stat_table_tmp$D_i
opt_5 <- (stat_table_tmp$p_i-opt5) * stat_table_tmp$D_i
## Оптовые цены
opt1 <- 5
opt2 <- 10
opt3 <- 20
opt4 <- 30
opt5 <- 50
opt_1 <- (stat_table_tmp$p_i-opt1) * stat_table_tmp$D_i
opt_2 <- (stat_table_tmp$p_i-opt2) * stat_table_tmp$D_i
opt_3 <- (stat_table_tmp$p_i-opt3) * stat_table_tmp$D_i
opt_4 <- (stat_table_tmp$p_i-opt4) * stat_table_tmp$D_i
opt_5 <- (stat_table_tmp$p_i-opt5) * stat_table_tmp$D_i
stat_table <- data.frame(stat_table,
opt_1,opt_2,opt_3,opt_4,opt_5)
stat_table
stat_table[stat_table <= 0]
which(stat_table <= 0)
stat_table[which(stat_table <= 0)]
which(stat_table <= 0)
match(stat_table <= 0)
stat_table[match(stat_table <= 0, stat_table)]
match(stat_table <= 0, stat_table)
stat_table
stat_table$opt_5[stat_table$opt_5 <= 0] <- NA
stat_table
plot(stat_table$opt_1)
plot(stat_table$opt_1, stat_table$opt_2)
stat_table_tmp <- data.frame(
p_i = tmp$value,
f_i = tmp$count,
D_i = rev(cumsum(tmp$count))
)
stat_table <- data.frame(stat_table,
opt_1,opt_2,opt_3,opt_4,opt_5)
stat_table
df <- as.data.frame((read_xlsx("g_form.xlsx"))[,-1])
head(df)
# Корректируем записи, в которых:
# Кола < 40
# Шокол < 40
# Кофе < 10
# Часы < 3000
# Самок < 5000
# Крем < 50
df[df$`Бутылка колы (0.5)` < 40,1] <- 40
df[df$`Плитка шоколада (100 гр)` < 40,2] <- 40
df[df$`Чашка кофе (0.3)` < 20,3] <- 20
df[df$`Часы наручные` < 3000,4] <- 3000
df[df$Электросамокат < 5000,5] <- 5000
df[df$`Крем для рук` < 50,6] <- 50
dim(df)
## Оптовые цены
opt1 <- 5
opt2 <- 10
opt3 <- 20
opt4 <- 30
opt5 <- 50
#
my_dat <- df$`Плитка шоколада (100 гр)`
tmp <- aggregate(data.frame(count = my_dat), list(value = my_dat), length)
stat_table_tmp <- data.frame(
p_i = tmp$value,
f_i = tmp$count,
D_i = rev(cumsum(tmp$count))
)
opt_1 <- (stat_table_tmp$p_i-opt1) * stat_table_tmp$D_i
opt_2 <- (stat_table_tmp$p_i-opt2) * stat_table_tmp$D_i
opt_3 <- (stat_table_tmp$p_i-opt3) * stat_table_tmp$D_i
opt_4 <- (stat_table_tmp$p_i-opt4) * stat_table_tmp$D_i
opt_5 <- (stat_table_tmp$p_i-opt5) * stat_table_tmp$D_i
stat_table <- data.frame(stat_table,
opt_1,opt_2,opt_3,opt_4,opt_5)
stat_table$opt_5[stat_table$opt_5 <= 0] <- NA
stat_table <- data.frame(stat_table_tmp,
opt_1,opt_2,opt_3,opt_4,opt_5)
stat_table$opt_5[stat_table$opt_5 <= 0] <- NA
stat_table$opt_5[stat_table$opt_5 <= 0] <- NA
stat_table
plot(stat_table$opt_1, stat_table$opt_2)
my_dat[my_dat > 400] <- 400
tmp <- aggregate(data.frame(count = my_dat), list(value = my_dat), length)
stat_table_tmp <- data.frame(
p_i = tmp$value,
f_i = tmp$count,
D_i = rev(cumsum(tmp$count))
)
opt_1 <- (stat_table_tmp$p_i-opt1) * stat_table_tmp$D_i
opt_2 <- (stat_table_tmp$p_i-opt2) * stat_table_tmp$D_i
opt_3 <- (stat_table_tmp$p_i-opt3) * stat_table_tmp$D_i
opt_4 <- (stat_table_tmp$p_i-opt4) * stat_table_tmp$D_i
opt_5 <- (stat_table_tmp$p_i-opt5) * stat_table_tmp$D_i
stat_table <- data.frame(stat_table_tmp,
opt_1,opt_2,opt_3,opt_4,opt_5)
stat_table$opt_5[stat_table$opt_5 <= 0] <- NA
stat_table
plot(stat_table$opt_1, stat_table$opt_2)
stat_table[,4]
stat_table[,4:8]
max(range(stat_table[,4:8]))
range(stat_table[,4:8])
lapply(stat_table[,4:8], range)
max(range(stat_table[,4:8], na.rm = T))
min(range(stat_table[,4:8], na.rm = T))
min_pl <- max(range(stat_table[,4:8], na.rm = T))
max_pl <- max(range(stat_table[,4:8], na.rm = T))
min_pl <- min(range(stat_table[,4:8], na.rm = T))
ggplot( aes(x=min_pl:max_pl, y=stat_table[,4:8])) +
geom_line()
ggplot(stat_table, aes(x = min_pl:max_pl))+
geom_line(aes(y = opt_1), color = "#03A82F") +
geom_line(aes(y = opt_2), color = "#07728C") +
geom_line(aes(y = opt_3), color = "#E17204") +
geom_line(aes(y = opt_4), color = "#E11E04") +
geom_line(aes(y = opt_5), color = "#429DC7")
opt_1
ggplot(stat_table, aes(x = 1:17))+
geom_line(aes(y = opt_1), color = "#03A82F") +
geom_line(aes(y = opt_2), color = "#07728C") +
geom_line(aes(y = opt_3), color = "#E17204") +
geom_line(aes(y = opt_4), color = "#E11E04") +
geom_line(aes(y = opt_5), color = "#429DC7")
plot(x = stat_table$p_i, y = stat_table$D_i)
ggplot(stat_table, aes(x = 1:17))+
geom_line(aes(y = opt_1), color = "#03A82F") +
geom_line(aes(y = opt_2), color = "#07728C") +
geom_line(aes(y = opt_3), color = "#E17204") +
geom_line(aes(y = opt_4), color = "#E11E04") +
geom_line(aes(y = opt_5), color = "#429DC7")
ggplot(stat_table, aes(x = stat_table$p_i))+
geom_line(aes(y = opt_1), color = "#03A82F") +
geom_line(aes(y = opt_2), color = "#07728C") +
geom_line(aes(y = opt_3), color = "#E17204") +
geom_line(aes(y = opt_4), color = "#E11E04") +
geom_line(aes(y = opt_5), color = "#429DC7")
stat_table_tmp
stat_table
my_dat[my_dat >= 300] <- 300
tmp <- aggregate(data.frame(count = my_dat), list(value = my_dat), length)
stat_table_tmp <- data.frame(
p_i = tmp$value,
f_i = tmp$count,
D_i = rev(cumsum(tmp$count))
)
opt_1 <- (stat_table_tmp$p_i-opt1) * stat_table_tmp$D_i
opt_2 <- (stat_table_tmp$p_i-opt2) * stat_table_tmp$D_i
opt_3 <- (stat_table_tmp$p_i-opt3) * stat_table_tmp$D_i
opt_4 <- (stat_table_tmp$p_i-opt4) * stat_table_tmp$D_i
opt_5 <- (stat_table_tmp$p_i-opt5) * stat_table_tmp$D_i
stat_table <- data.frame(stat_table_tmp,
opt_1,opt_2,opt_3,opt_4,opt_5)
stat_table
max_pl <- max(range(stat_table[,4:8], na.rm = T))
min_pl <- min(range(stat_table[,4:8], na.rm = T))
stat_table$opt_5[stat_table$opt_5 <= 0] <- NA
ggplot(stat_table, aes(x = stat_table$p_i))+
geom_line(aes(y = opt_1), color = "#03A82F") +
geom_line(aes(y = opt_2), color = "#07728C") +
geom_line(aes(y = opt_3), color = "#E17204") +
geom_line(aes(y = opt_4), color = "#E11E04") +
geom_line(aes(y = opt_5), color = "#429DC7")
lapply(stat_table[,4:8], max)
lapply(stat_table[,4:8], max,na.rm = T)
View(stat_table)
#
my_dat <- df$`Плитка шоколада (100 гр)`
my_dat[my_dat >= 300] <- 300
tmp <- aggregate(data.frame(count = my_dat), list(value = my_dat), length)
stat_table_tmp <- data.frame(
p_i = tmp$value,
f_i = tmp$count,
D_i = rev(cumsum(tmp$count))
)
opt_1 <- (stat_table_tmp$p_i-opt1) * stat_table_tmp$D_i
opt_2 <- (stat_table_tmp$p_i-opt2) * stat_table_tmp$D_i
opt_3 <- (stat_table_tmp$p_i-opt3) * stat_table_tmp$D_i
opt_4 <- (stat_table_tmp$p_i-opt4) * stat_table_tmp$D_i
opt_5 <- (stat_table_tmp$p_i-opt5) * stat_table_tmp$D_i
stat_table <- data.frame(stat_table_tmp,
opt_1,opt_2,opt_3,opt_4,opt_5)
df <- as.data.frame((read_xlsx("g_form.xlsx"))[,-1])
df[df$`Плитка шоколада (100 гр)` < 40,2] <- 40
## Оптовые цены
opt1 <- 5
opt2 <- 10
opt3 <- 20
opt4 <- 30
opt5 <- 50
#
my_dat <- df$`Плитка шоколада (100 гр)`
my_dat[my_dat >= 300] <- 300
tmp <- aggregate(data.frame(count = my_dat), list(value = my_dat), length)
stat_table_tmp <- data.frame(
p_i = tmp$value,
f_i = tmp$count,
D_i = rev(cumsum(tmp$count))
)
opt_1 <- (stat_table_tmp$p_i-opt1) * stat_table_tmp$D_i
opt_2 <- (stat_table_tmp$p_i-opt2) * stat_table_tmp$D_i
opt_3 <- (stat_table_tmp$p_i-opt3) * stat_table_tmp$D_i
opt_4 <- (stat_table_tmp$p_i-opt4) * stat_table_tmp$D_i
opt_5 <- (stat_table_tmp$p_i-opt5) * stat_table_tmp$D_i
stat_table <- data.frame(stat_table_tmp,
opt_1,opt_2,opt_3,opt_4,opt_5)
stat_table
tmp$count
cumsum(tmp$count)
stat_table_tmp <- data.frame(
p_i = tmp$value,
f_i = tmp$count,
D_i = cumsum(rev(tmp$count))
)
opt_1 <- (stat_table_tmp$p_i-opt1) * stat_table_tmp$D_i
opt_2 <- (stat_table_tmp$p_i-opt2) * stat_table_tmp$D_i
opt_3 <- (stat_table_tmp$p_i-opt3) * stat_table_tmp$D_i
opt_4 <- (stat_table_tmp$p_i-opt4) * stat_table_tmp$D_i
opt_5 <- (stat_table_tmp$p_i-opt5) * stat_table_tmp$D_i
stat_table <- data.frame(stat_table_tmp,
opt_1,opt_2,opt_3,opt_4,opt_5)
stat_table
stat_table_tmp <- data.frame(
p_i = tmp$value,
f_i = tmp$count,
D_i = rev(cumsum(rev(tmp$count)))
)
opt_1 <- (stat_table_tmp$p_i-opt1) * stat_table_tmp$D_i
opt_2 <- (stat_table_tmp$p_i-opt2) * stat_table_tmp$D_i
opt_3 <- (stat_table_tmp$p_i-opt3) * stat_table_tmp$D_i
opt_4 <- (stat_table_tmp$p_i-opt4) * stat_table_tmp$D_i
opt_5 <- (stat_table_tmp$p_i-opt5) * stat_table_tmp$D_i
stat_table <- data.frame(stat_table_tmp,
opt_1,opt_2,opt_3,opt_4,opt_5)
stat_table
stat_table$opt_5[stat_table$opt_5 <= 0] <- NA
lapply(stat_table[,4:8], max,na.rm = T)
max_pl <- max(range(stat_table[,4:8], na.rm = T))
min_pl <- min(range(stat_table[,4:8], na.rm = T))
ggplot(stat_table, aes(x = stat_table$p_i))+
geom_line(aes(y = opt_1), color = "#03A82F") +
geom_line(aes(y = opt_2), color = "#07728C") +
geom_line(aes(y = opt_3), color = "#E17204") +
geom_line(aes(y = opt_4), color = "#E11E04") +
geom_line(aes(y = opt_5), color = "#429DC7")
plot(x = stat_table$p_i, y = stat_table$D_i)
ggplot(stat_table, aes(x = stat_table$p_i))+
geom_line(aes(y = opt_1), color = "#03A82F") +
geom_line(aes(y = opt_2), color = "#07728C") +
geom_line(aes(y = opt_3), color = "#E17204") +
geom_line(aes(y = opt_4), color = "#E11E04") +
geom_line(aes(y = opt_5), color = "#429DC7")
plot(x = stat_table$p_i, y = stat_table$D_i)
stat_table
plot(x = stat_table$p_i, y = stat_table$D_i)
mydata <- as.data.frame(HairEyeColor)
shat <- mydata[mydata$Hair == "Brown"]
mydata$Hair
mydata$Hair == "Brown"
mydata[mydata$Hair == "Brown"]
shat <- mydata$Hair[mydata$Hair == "Brown"]
shat
mydata
shat <- mydata[,mydata$Hair == "Brown"]
shat <- mydata[mydata$Hair == "Brown",]
shat
chisq.test(shat$Hair,shat$Eye)
shat$Hair
chisq.test(shat)
shat
chisq.test(shat)
shat <- mydata[mydata$Hair == "Brown" && mydata$Sex == "Female",]
chisq.test(c(shat)
shat
mydata$Hair == "Brown" && mydata$Sex == "Female"
mydata$Hair == "Brown" & mydata$Sex == "Female"
shat <- mydata[mydata$Hair == "Brown" & mydata$Sex == "Female",]
shat
chisq.test(shat)
chisq.test(shat$Freq)
library(ggplot2)
mydata <- diamonds
chisq.test(c(mydata$cut, mydata$color))
c(mydata$cut, mydata$color)
rbind(mydata$cut, mydata$color)
mydata$cut
cbind(mydata$cut, mydata$color)
View(mydata)
cbind(mydata$cut, mydata$color)
mydata$color
mydata$cut
cbind(mydata$cut, mydata$color)
c(mydata$cut, mydata$color)
mydata <- as.data.frame(diamonds)
rbind(mydata$cut, mydata$color)
c(mydata$cut, mydata$color)
chisq.test(c(as.character(mydata$cut), as.character(mydata$color)))
c(as.character(mydata$cut), as.character(mydata$color))
rbind(as.character(mydata$cut), as.character(mydata$color))
tmp <-
tmp <- rbind(as.character(mydata$cut), as.character(mydata$color))
tmp <- rbind(as.character(mydata$cut), as.character(mydata$color))
View(tmp)
tmp <- cbind(as.character(mydata$cut), as.character(mydata$color))
tmp <- data.frame(as.character(mydata$cut), as.character(mydata$color))
View(tmp)
tmp <- data.frame(mydata$cut, mydata$color)
View(tmp)
chisq.test(tmp)
vars <- unique(tmp$mydata.cut)
vars
count(tmp)
table(tmp)
chisq.test(table(tmp))
main_stat <- chisq.test(table(tmp))
main_stat <- chisq.test(table(tmp))$statistic
main_stat
main_stat <- chisq.test(table(data.frame(mydata$cut, mydata$color)))$statistic
main_stat
factor_price <- ifelse(diamonds$price >= mean(diamonds$price,1,0))
factor_price <- ifelse(diamonds$price >= mean(diamonds$price),1,0)
factor_price
diamonds$price
factor_price
factor_carat <- ifelse(diamonds$carat >= mean(diamonds$carat),1,0)
chisq.test(factor_price, factor_carat)
main_stat <- chisq.test(factor_price, factor_carat)$statistic
fisher_test <- fisher.test(mtcars$am,mtcars$vs)
fisher_test
fisher_test <- fisher.test(mtcars$am,mtcars$vs)$p.value
fisher_test
table(mtcars$am, mtcars$vs)
mtcars$am,mtcars$vs
mtcars$am
mtcars$vs
fisher_test
fisher.test(mtcars$am,mtcars$vs)
df <- ToothGrowth
str(df)
t.test(len ~ supp, df)
t_stat <- t.test(df$len[df$supp == "OJ" & df$dose == 0.5],
df$len[df$supp == "VC" & df$dose == 2])
t_stat
t_stat$p.value
df$len[df$supp == "OJ" & df$dose == 0.5]
t_stat <- t.test(df$len[df$supp == "OJ" & df$dose == 0.5],
df$len[df$supp == "VC" & df$dose == 2])$statistic
t_stat
subset(ToothGrowth, supp=='OJ' & dose==0.5 | supp=='VC' & dose==2)
subset(ToothGrowth, supp=='OJ' & dose==0.5 | supp=='VC' & dose==2 | supp = 'VC' & dose = 0.5)
subset(ToothGrowth, supp=='OJ' & dose==0.5 | supp=='VC' & dose==2 | supp == 'VC' & dose == 0.5)
subset(ToothGrowth, supp=='OJ' & dose==0.5 | supp=='VC' & dose==2 | supp == 'OJ' & dose == 1)
df <- read.csv("C:\Users\Пенопласточка\Downloads\lekarstva.csv")
df <- read.csv("C:/Users/Пенопласточка/Downloads/lekarstva.csv")
df
t.test(df$Pressure_before, df$Pressure_after, paired = T)
df <- read.table("C:/Users/Пенопласточка/Downloads/dataset_11504_15.txt")
bartlett.test(df)
View(df)
bartlett.test(V1 ~ V2,df)
bartlett.test(V2 ~ V1,df)
bartlett.test(V1 ~ V2,df)
t.test(V1 ~ V2, df)
t.test(V1 ~ V2, df, var.equal = T)
df <- read.table("C:/Users/Пенопласточка/Downloads/dataset_11504_15 (1).txt")
bartlett.test(V1 ~ V2,df)
t.test(V1 ~ V2, df, var.equal = T)
df <- read.table("C:/Users/Пенопласточка/Downloads/dataset_11504_16.txt")
bartlett.test(V1 ~ V2,df)
df <- read.table("C:/Users/Пенопласточка/Downloads/dataset_11504_16.txt")
df
t.test(V1 ~ V2, df, var.equal = F)
t.test(df$V1, df$V2, var.equal = F)
#install.packages("readxl")
library(readxl)
df <- as.data.frame((read_xlsx("g_form.xlsx"))[,-1])
df[df$`Плитка шоколада (100 гр)` < 40,2] <- 40
## Оптовые цены
opt1 <- 5
opt2 <- 10
opt3 <- 20
opt4 <- 30
opt5 <- 50
#
my_dat <- df$`Плитка шоколада (100 гр)`
my_dat[my_dat >= 300] <- 300
tmp <- aggregate(data.frame(count = my_dat), list(value = my_dat), length)
stat_table_tmp <- data.frame(
p_i = tmp$value,
f_i = tmp$count,
D_i = rev(cumsum(rev(tmp$count)))
)
opt_1 <- (stat_table_tmp$p_i-opt1) * stat_table_tmp$D_i
opt_2 <- (stat_table_tmp$p_i-opt2) * stat_table_tmp$D_i
opt_3 <- (stat_table_tmp$p_i-opt3) * stat_table_tmp$D_i
opt_4 <- (stat_table_tmp$p_i-opt4) * stat_table_tmp$D_i
opt_5 <- (stat_table_tmp$p_i-opt5) * stat_table_tmp$D_i
stat_table <- data.frame(stat_table_tmp,
opt_1,opt_2,opt_3,opt_4,opt_5)
stat_table$opt_5[stat_table$opt_5 <= 0] <- NA
lapply(stat_table[,4:8], max,na.rm = T)
max_pl <- max(range(stat_table[,4:8], na.rm = T))
min_pl <- min(range(stat_table[,4:8], na.rm = T))
ggplot(stat_table, aes(x = stat_table$p_i))+
geom_line(aes(y = opt_1), color = "#03A82F") +
geom_line(aes(y = opt_2), color = "#07728C") +
geom_line(aes(y = opt_3), color = "#E17204") +
geom_line(aes(y = opt_4), color = "#E11E04") +
geom_line(aes(y = opt_5), color = "#429DC7")
library("ggplot2")
ggplot(stat_table, aes(x = stat_table$p_i))+
geom_line(aes(y = opt_1), color = "#03A82F") +
geom_line(aes(y = opt_2), color = "#07728C") +
geom_line(aes(y = opt_3), color = "#E17204") +
geom_line(aes(y = opt_4), color = "#E11E04") +
geom_line(aes(y = opt_5), color = "#429DC7")
plot(x = stat_table$p_i, y = stat_table$D_i)
ggplot(stat_table, aes(x = stat_table$p_i))+
geom_line(aes(y = opt_1), color = "#03A82F") +
geom_line(aes(y = opt_2), color = "#07728C") +
geom_line(aes(y = opt_3), color = "#E17204") +
geom_line(aes(y = opt_4), color = "#E11E04") +
geom_line(aes(y = opt_5), color = "#429DC7")
ggplot(stat_table, aes(x = p_i))+
geom_line(aes(y = opt_1), color = "#03A82F") +
geom_line(aes(y = opt_2), color = "#07728C") +
geom_line(aes(y = opt_3), color = "#E17204") +
geom_line(aes(y = opt_4), color = "#E11E04") +
geom_line(aes(y = opt_5), color = "#429DC7")
plot(x = stat_table$p_i, y = stat_table$D_i)
tmp$count
cumsum(tmp$count)
df[df$`Плитка шоколада (100 гр)` < 40,2] <- 40
my_dat <- df$`Плитка шоколада (100 гр)`
my_dat[my_dat >= 300] <- 300
my_dat
hist(my_dat)
ggplot(data = my_dat, mapping = aes(x=mydat))
ggplot(mapping = aes(my_dat)) + geom_bar()
ggplot() + geom_bar(aes(my_dat))
ggplot() + geom_bar(aes(my_dat), binwidth = 2)
ggplot() + geom_histogram(aes(my_dat), binwidth = 2)
ggplot() + geom_histogram(aes(my_dat), binwidth = 10)
ggplot() + aes(my_dat)+ geom_histogram(binwidth=1, colour="black", fill="white")
ggplot() + aes(my_dat)+ geom_histogram(breaks = 5, colour="black", fill="white")
hist(my_dat)
hist(my_dat, xlab = "Максимальная стоимость, руб.", ylab = "Количество человек")
my_dat
my_dat
my_dat
stat_table
plot(x = stat_table$p_i, y = stat_table$D_i)
plot(x = stat_table$p_i, y = stat_table$D_i, "b")
plot(x = stat_table$p_i, y = stat_table$D_i, "p")
plot(x = stat_table$p_i, y = stat_table$D_i, "o")
plot(x = stat_table$p_i, y = stat_table$D_i, "o",
xlab = "Максимальная стоимость, руб.",
ylab = "Спрос, чел.")
png(filename = "../img/1.png",
width = 1920, height = 1080,
res = 96 * 1.25)
plot(x = stat_table$p_i, y = stat_table$D_i, "o",
xlab = "Максимальная стоимость, руб.",
ylab = "Спрос, чел.")
dev.off()
png(filename = "../img/1.png",
width = 1920, height = 1080,
res = 96 * 3)
plot(x = stat_table$p_i, y = stat_table$D_i, "o",
xlab = "Максимальная стоимость, руб.",
ylab = "Спрос, чел.")
dev.off()
lapply(stat_table[,4:8], max,na.rm = T)
