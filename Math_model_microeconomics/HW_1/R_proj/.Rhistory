mydata$color
mydata$cut
cbind(mydata$cut, mydata$color)
c(mydata$cut, mydata$color)
mydata <- as.data.frame(diamonds)
rbind(mydata$cut, mydata$color)
c(mydata$cut, mydata$color)
chisq.test(c(as.character(mydata$cut), as.character(mydata$color)))
c(as.character(mydata$cut), as.character(mydata$color))
rbind(as.character(mydata$cut), as.character(mydata$color))
tmp <-
tmp <- rbind(as.character(mydata$cut), as.character(mydata$color))
tmp <- rbind(as.character(mydata$cut), as.character(mydata$color))
View(tmp)
tmp <- cbind(as.character(mydata$cut), as.character(mydata$color))
tmp <- data.frame(as.character(mydata$cut), as.character(mydata$color))
View(tmp)
tmp <- data.frame(mydata$cut, mydata$color)
View(tmp)
chisq.test(tmp)
vars <- unique(tmp$mydata.cut)
vars
count(tmp)
table(tmp)
chisq.test(table(tmp))
main_stat <- chisq.test(table(tmp))
main_stat <- chisq.test(table(tmp))$statistic
main_stat
main_stat <- chisq.test(table(data.frame(mydata$cut, mydata$color)))$statistic
main_stat
factor_price <- ifelse(diamonds$price >= mean(diamonds$price,1,0))
factor_price <- ifelse(diamonds$price >= mean(diamonds$price),1,0)
factor_price
diamonds$price
factor_price
factor_carat <- ifelse(diamonds$carat >= mean(diamonds$carat),1,0)
chisq.test(factor_price, factor_carat)
main_stat <- chisq.test(factor_price, factor_carat)$statistic
fisher_test <- fisher.test(mtcars$am,mtcars$vs)
fisher_test
fisher_test <- fisher.test(mtcars$am,mtcars$vs)$p.value
fisher_test
table(mtcars$am, mtcars$vs)
mtcars$am,mtcars$vs
mtcars$am
mtcars$vs
fisher_test
fisher.test(mtcars$am,mtcars$vs)
df <- ToothGrowth
str(df)
t.test(len ~ supp, df)
t_stat <- t.test(df$len[df$supp == "OJ" & df$dose == 0.5],
df$len[df$supp == "VC" & df$dose == 2])
t_stat
t_stat$p.value
df$len[df$supp == "OJ" & df$dose == 0.5]
t_stat <- t.test(df$len[df$supp == "OJ" & df$dose == 0.5],
df$len[df$supp == "VC" & df$dose == 2])$statistic
t_stat
subset(ToothGrowth, supp=='OJ' & dose==0.5 | supp=='VC' & dose==2)
subset(ToothGrowth, supp=='OJ' & dose==0.5 | supp=='VC' & dose==2 | supp = 'VC' & dose = 0.5)
subset(ToothGrowth, supp=='OJ' & dose==0.5 | supp=='VC' & dose==2 | supp == 'VC' & dose == 0.5)
subset(ToothGrowth, supp=='OJ' & dose==0.5 | supp=='VC' & dose==2 | supp == 'OJ' & dose == 1)
df <- read.csv("C:\Users\Пенопласточка\Downloads\lekarstva.csv")
df <- read.csv("C:/Users/Пенопласточка/Downloads/lekarstva.csv")
df
t.test(df$Pressure_before, df$Pressure_after, paired = T)
df <- read.table("C:/Users/Пенопласточка/Downloads/dataset_11504_15.txt")
bartlett.test(df)
View(df)
bartlett.test(V1 ~ V2,df)
bartlett.test(V2 ~ V1,df)
bartlett.test(V1 ~ V2,df)
t.test(V1 ~ V2, df)
t.test(V1 ~ V2, df, var.equal = T)
df <- read.table("C:/Users/Пенопласточка/Downloads/dataset_11504_15 (1).txt")
bartlett.test(V1 ~ V2,df)
t.test(V1 ~ V2, df, var.equal = T)
df <- read.table("C:/Users/Пенопласточка/Downloads/dataset_11504_16.txt")
bartlett.test(V1 ~ V2,df)
df <- read.table("C:/Users/Пенопласточка/Downloads/dataset_11504_16.txt")
df
t.test(V1 ~ V2, df, var.equal = F)
t.test(df$V1, df$V2, var.equal = F)
#install.packages("readxl")
library(readxl)
df <- as.data.frame((read_xlsx("g_form.xlsx"))[,-1])
df[df$`Плитка шоколада (100 гр)` < 40,2] <- 40
## Оптовые цены
opt1 <- 5
opt2 <- 10
opt3 <- 20
opt4 <- 30
opt5 <- 50
#
my_dat <- df$`Плитка шоколада (100 гр)`
my_dat[my_dat >= 300] <- 300
tmp <- aggregate(data.frame(count = my_dat), list(value = my_dat), length)
stat_table_tmp <- data.frame(
p_i = tmp$value,
f_i = tmp$count,
D_i = rev(cumsum(rev(tmp$count)))
)
opt_1 <- (stat_table_tmp$p_i-opt1) * stat_table_tmp$D_i
opt_2 <- (stat_table_tmp$p_i-opt2) * stat_table_tmp$D_i
opt_3 <- (stat_table_tmp$p_i-opt3) * stat_table_tmp$D_i
opt_4 <- (stat_table_tmp$p_i-opt4) * stat_table_tmp$D_i
opt_5 <- (stat_table_tmp$p_i-opt5) * stat_table_tmp$D_i
stat_table <- data.frame(stat_table_tmp,
opt_1,opt_2,opt_3,opt_4,opt_5)
stat_table$opt_5[stat_table$opt_5 <= 0] <- NA
lapply(stat_table[,4:8], max,na.rm = T)
max_pl <- max(range(stat_table[,4:8], na.rm = T))
min_pl <- min(range(stat_table[,4:8], na.rm = T))
ggplot(stat_table, aes(x = stat_table$p_i))+
geom_line(aes(y = opt_1), color = "#03A82F") +
geom_line(aes(y = opt_2), color = "#07728C") +
geom_line(aes(y = opt_3), color = "#E17204") +
geom_line(aes(y = opt_4), color = "#E11E04") +
geom_line(aes(y = opt_5), color = "#429DC7")
library("ggplot2")
ggplot(stat_table, aes(x = stat_table$p_i))+
geom_line(aes(y = opt_1), color = "#03A82F") +
geom_line(aes(y = opt_2), color = "#07728C") +
geom_line(aes(y = opt_3), color = "#E17204") +
geom_line(aes(y = opt_4), color = "#E11E04") +
geom_line(aes(y = opt_5), color = "#429DC7")
plot(x = stat_table$p_i, y = stat_table$D_i)
ggplot(stat_table, aes(x = stat_table$p_i))+
geom_line(aes(y = opt_1), color = "#03A82F") +
geom_line(aes(y = opt_2), color = "#07728C") +
geom_line(aes(y = opt_3), color = "#E17204") +
geom_line(aes(y = opt_4), color = "#E11E04") +
geom_line(aes(y = opt_5), color = "#429DC7")
ggplot(stat_table, aes(x = p_i))+
geom_line(aes(y = opt_1), color = "#03A82F") +
geom_line(aes(y = opt_2), color = "#07728C") +
geom_line(aes(y = opt_3), color = "#E17204") +
geom_line(aes(y = opt_4), color = "#E11E04") +
geom_line(aes(y = opt_5), color = "#429DC7")
plot(x = stat_table$p_i, y = stat_table$D_i)
tmp$count
cumsum(tmp$count)
df[df$`Плитка шоколада (100 гр)` < 40,2] <- 40
my_dat <- df$`Плитка шоколада (100 гр)`
my_dat[my_dat >= 300] <- 300
my_dat
hist(my_dat)
ggplot(data = my_dat, mapping = aes(x=mydat))
ggplot(mapping = aes(my_dat)) + geom_bar()
ggplot() + geom_bar(aes(my_dat))
ggplot() + geom_bar(aes(my_dat), binwidth = 2)
ggplot() + geom_histogram(aes(my_dat), binwidth = 2)
ggplot() + geom_histogram(aes(my_dat), binwidth = 10)
ggplot() + aes(my_dat)+ geom_histogram(binwidth=1, colour="black", fill="white")
ggplot() + aes(my_dat)+ geom_histogram(breaks = 5, colour="black", fill="white")
hist(my_dat)
hist(my_dat, xlab = "Максимальная стоимость, руб.", ylab = "Количество человек")
my_dat
my_dat
my_dat
stat_table
plot(x = stat_table$p_i, y = stat_table$D_i)
plot(x = stat_table$p_i, y = stat_table$D_i, "b")
plot(x = stat_table$p_i, y = stat_table$D_i, "p")
plot(x = stat_table$p_i, y = stat_table$D_i, "o")
plot(x = stat_table$p_i, y = stat_table$D_i, "o",
xlab = "Максимальная стоимость, руб.",
ylab = "Спрос, чел.")
png(filename = "../img/1.png",
width = 1920, height = 1080,
res = 96 * 1.25)
plot(x = stat_table$p_i, y = stat_table$D_i, "o",
xlab = "Максимальная стоимость, руб.",
ylab = "Спрос, чел.")
dev.off()
png(filename = "../img/1.png",
width = 1920, height = 1080,
res = 96 * 3)
plot(x = stat_table$p_i, y = stat_table$D_i, "o",
xlab = "Максимальная стоимость, руб.",
ylab = "Спрос, чел.")
dev.off()
lapply(stat_table[,4:8], max,na.rm = T)
source('~/6_sem/Math_model_microeconomics/HW_1/R_proj/source.R', encoding = 'UTF-8', echo=TRUE)
source('~/6_sem/Math_model_microeconomics/HW_1/R_proj/source.R', encoding = 'UTF-8')
stat_table
pi <- stat_table$p_i
Ni <- stat_table$f_i
piNi <- pi * Ni
D_pi <- stat_table$D_i
D_pi_Ni <- D_pi * Ni
pi_2_Ni <- pi^2 * Ni
D_pi_pi_Ni <- D_pi_Ni * pi
View(df)
tmp
stat_table
#############################################
n <- stat_table$D_i[1]
n
a_zv <- (sum(D_pi_pi_Ni) - 1/n * sum(piNi) * sum(D_pi_Ni))/
(sum(pi_2_Ni) - n * (mean(piNi))^2)
a_zv <- (sum(D_pi_pi_Ni) - 1/n * sum(piNi) * sum(D_pi_Ni))/
(sum(pi_2_Ni) - n * (mean(piNi))^2)
a_zv
b_zv <- mean(D_pi_Ni)
b_zv
d_zv <- b_zv - a_zv * mean(piNi)
d_zv
Dzv_pi <- function(p)
{
return(a_zv * p + d_zv)
}
D_zv_pi <- Dzv_pi(pi)
D_zv_pi
a_zv <- (sum(D_pi_pi_Ni) - 1/n * sum(piNi) * sum(D_pi_Ni))/
(sum(pi_2_Ni) - n * (mean(piNi))^2)
a_zv
n
D_pi_pi_Ni
sum(D_pi_pi_Ni)
sum(piNi)
sum(D_pi_Ni)
Dzv_pi
a_zv
d_zv
predposl <- Ni * (D_pi - D_zv_pi)
predposl
posl <- Ni * (D_pi - D_zv_pi)^2
posl <- Ni * (D_pi - D_zv_pi)^2
posl
ss <- sum(posl)
ss
sigma_zv <- sqrt(ss/n)
sigma_zv
stat_table
lm(D_i ~ p_i, stat_table)
df
D_pi
sqrt(1/n * 1)
D_dov_verh <- function(p)
{
a_zv * p + d_zv + 1.96 * sigma_zv *
sqrt(1/n + ((p-mean(piNi))^2)/
(sum(pi_2_Ni) - n * (mean(piNi))^2))
}
View(stat_table)
D_dov_verh(40)
D_dov_verh(100)
a_zv
a_zv <- ((sum(D_pi_pi_Ni) - (1/n) * sum(piNi) * sum(D_pi_Ni)))/
(sum(pi_2_Ni) - n * (mean(piNi))^2)
a_zv
stat_table
lm(D_i ~ p_i, stat_table)
Ni
tmp11 <- data.frame(
pi <- c(50,60,75,90,100,120,150,170,180,200),
dpi <- c(50,48,46,38,34,19,12,7,4,2)
)
tmp11
tmp11 <- data.frame(
pi = c(50,60,75,90,100,120,150,170,180,200),
dpi = c(50,48,46,38,34,19,12,7,4,2)
)
tmp11
lm(dpi ~ pi, tmp11)
prep <- data.frame(
pi,Ni,piNi,D_pi,
D_pi_Ni, D_pi_pi_Ni
)
prep <- data.frame(
pi = pi,Ni = Ni,piNi = piNi, D_pi = D_pi,
D_pi_Ni = D_pi_Ni, D_pi_pi_Ni = D_pi_pi_Ni
)
prep <- data.frame(  pi = pi,Ni = Ni,piNi = piNi, D_pi = D_pi,
D_pi_Ni = D_pi_Ni, D_pi_pi_Ni = D_pi_pi_Ni)
pi
Ni
stat_table
stat_table$p_i
pi <- stat_table$p_i
Ni <- stat_table$f_i
piNi <- pi * Ni
D_pi <- stat_table$D_i
D_pi_Ni <- D_pi * Ni
pi_2_Ni <- pi^2 * Ni
D_pi_pi_Ni <- D_pi_Ni * pi
prep <- data.frame(  pi = pi,Ni = Ni,piNi = piNi, D_pi = D_pi,
D_pi_Ni = D_pi_Ni, D_pi_pi_Ni = D_pi_pi_Ni)
prep
a_zv <- ((sum(D_pi_pi_Ni) - (1/n) * sum(piNi) * sum(D_pi_Ni)))/
(sum(pi_2_Ni) - n * (mean(piNi))^2)
a_zv
b_zv <- mean(D_pi_Ni)
b_zv
a_zv
pi <- stat_table$p_i
Ni <- stat_table$f_i
piNi <- pi * Ni
D_pi <- stat_table$D_i
D_pi_Ni <- D_pi * Ni
pi_2_Ni <- pi^2 * Ni
D_pi_pi_Ni <- D_pi_Ni * pi
prep <- data.frame(  pi = pi,Ni = Ni,piNi = piNi, D_pi = D_pi,
D_pi_Ni = D_pi_Ni, D_pi_pi_Ni = D_pi_pi_Ni)
a_zv <- ((sum(D_pi_pi_Ni) - (1/n) * sum(piNi) * sum(D_pi_Ni)))/
(sum(pi_2_Ni) - n * (mean(piNi))^2)
a_zv
prep
lm(D_pi ~ pi, prep)
prep <- data.frame(  pi = pi,Ni = Ni,piNi = piNi,
D_pi = D_pi, D_pi_Ni = D_pi_Ni,
pi_2_Ni = pi_2_Ni,
D_pi_pi_Ni = D_pi_pi_Ni)
prep
68*40*7
a_zv <- ( sum(D_pi_pi_Ni) - ( (1/n) * sum(piNi) * sum(D_pi_Ni)) )/
( sum(pi_2_Ni) - n * (mean(piNi))^2)
a_zv
prep
40^2*7
a_zv
piNi
sum(piNi)
n
7952/68
mean(piNi)
a_zv <- ( sum(D_pi_pi_Ni) - ( (1/n) * sum(piNi) * sum(D_pi_Ni)) )/
( sum(pi_2_Ni) - n * ((piNi)/n)^2)
a_zv
a_zv <- ( sum(D_pi_pi_Ni) - ( (1/n) * sum(piNi) * sum(D_pi_Ni)) )/
( sum(pi_2_Ni) - n * (sum(piNi)/n)^2)
a_zv
lm(D_pi ~ pi, prep)
b_zv <- (D_pi_Ni)/n
d_zv <- b_zv - a_zv * sum(piNi)/n
d_zv
b_zv <- sum(D_pi_Ni)/n
d_zv <- b_zv - a_zv * sum(piNi)/n
d_zv
Dzv_pi <- function(p)
{
return(a_zv * p + d_zv)
}
D_zv_pi <- Dzv_pi(pi)
predposl <- Ni * (D_pi - D_zv_pi)
posl <- Ni * (D_pi - D_zv_pi)^2
ss <- sum(posl)
sigma_zv <- sqrt(ss/n)
sigma_zv
D_dov_verh <- function(p)
{
a_zv * p + d_zv + 1.96 * sigma_zv *
sqrt(1/n + ((p-mean(piNi))^2)/
(sum(pi_2_Ni) - n * (mean(piNi))^2))
}
D_dov_verh(100)
D_dov_verh(100)
D_zv_pi
prep$pi
prep$D_pi
plot(D_pi ~ pi, prep)
plot(D_pi ~ pi, prep, type = "l")
plot(D_pi ~ pi, prep, type = "o")
abline(lm(D_pi ~ pi, prep))
abline(lm(D_pi ~ pi, prep), col = "green")
plot(D_pi ~ pi, prep, type = "o", ylim = c(-5,70))
abline(lm(D_pi ~ pi, prep), col = "green")
ss
plot(D_pi ~ pi^2, prep, type = "o", ylim = c(-5,70))
plot(D_pi ~ (pi)^2, prep, type = "o", ylim = c(-5,70))
# D_dov_verh <- function(p)
# {
#   a_zv * p + d_zv + 1.96 * sigma_zv *
#     sqrt(1/n + ((p-mean(piNi))^2)/
#            (sum(pi_2_Ni) - n * (mean(piNi))^2))
# }
prep$pi_2 <- prep$pi^2
plot(D_pi ~ pi_2, prep, type = "o", ylim = c(-5,70))
# D_dov_verh <- function(p)
# {
#   a_zv * p + d_zv + 1.96 * sigma_zv *
#     sqrt(1/n + ((p-mean(piNi))^2)/
#            (sum(pi_2_Ni) - n * (mean(piNi))^2))
# }
prep$D_pi_2 <- prep$D_pi^2
plot(D_pi_2 ~ pi, prep, type = "o", ylim = c(-5,70))
plot(D_pi_2 ~ pi, prep, type = "o")
plot(D_pi_2 ~ pi, prep, type = "o")
plot(D_pi ~ pi_2, prep, type = "o")
# D_dov_verh <- function(p)
# {
#   a_zv * p + d_zv + 1.96 * sigma_zv *
#     sqrt(1/n + ((p-mean(piNi))^2)/
#            (sum(pi_2_Ni) - n * (mean(piNi))^2))
# }
prep$D_pi_2 <- sqrt(prep$D_pi)
plot(D_pi_2 ~ pi, prep, type = "o")
pi_log <- log(stat_table$p_i)
Ni_log <- stat_table$f_i
D_pi_log <- log(stat_table$D_i)
D_pi_Ni_log <- D_pi * Ni
pi_2_Ni_log <- pi^2 * Ni
D_pi_pi_Ni_log <- D_pi_Ni * pi
prep_log <- data.frame(  pi_log = pi_log,Ni_log = Ni_log,piNi_log = piNi_log,
D_pi_log = D_pi_log, D_pi_Ni_log = D_pi_Ni_log,
pi_2_Ni_log = pi_2_Ni_log,
D_pi_pi_Ni_log = D_pi_pi_Ni_log)
prep_log
pi_log <- log(stat_table$p_i)
Ni_log <- stat_table$f_i
piNi_log <- pi_log * Ni
D_pi_log <- log(stat_table$D_i)
D_pi_Ni_log <- D_pi * Ni
pi_2_Ni_log <- pi^2 * Ni
D_pi_pi_Ni_log <- D_pi_Ni * pi
prep_log <- data.frame(  pi_log = pi_log,Ni_log = Ni_log,piNi_log = piNi_log,
D_pi_log = D_pi_log, D_pi_Ni_log = D_pi_Ni_log,
pi_2_Ni_log = pi_2_Ni_log,
D_pi_pi_Ni_log = D_pi_pi_Ni_log)
prep_log
prep_log
a_zv_log <- ( sum(D_pi_pi_Ni_log) - ( (1/n) * sum(piNi_log) * sum(D_pi_Ni_log)) )/
( sum(pi_2_Ni_log) - n * (sum(piNi_log)/n)^2)
a_zv_log
b_zv <- sum(D_pi_Ni_log)/n
b_zv
d_zv <- b_zv_log - a_zv_log * sum(piNi_log)/n
d_zv
b_zv_log <- sum(D_pi_Ni_log)/n
d_zv <- b_zv_log - a_zv_log * sum(piNi_log)/n
d_zv
Dzv_pi_log <- function(p)
{
return(d_zv_log * p^(a_zv_log ))
}
Dzv_pi_log(pi_log)
Dzv_pi_log <- function(p)
{
return(d_zv_log * p^(a_zv_log ))
}
Dzv_pi_log(pi_log)
d_zv_log <- b_zv_log - a_zv_log * sum(piNi_log)/n
b_zv_log <- sum(D_pi_Ni_log)/n
d_zv_log <- b_zv_log - a_zv_log * sum(piNi_log)/n
Dzv_pi_log <- function(p)
{
return(d_zv_log * p^(a_zv_log ))
}
Dzv_pi_log(pi_log)
plot(D_pi_log ~ pi_log)
tmp1 <- Dzv_pi_log(pi_log)
abline(tmp1)
abline(tmp1 ~ pi_log)
tmp1
pi_log
D_pi_log
stat_table
tmp$value
tmp$count
rev(cumsum(rev(tmp$count)))
tmp_foo <- function(p)
{
return(4642.1070 * p^(-1.156))
}
tmp_foo <- function(p)
{
return(4642.1070 * p^(-1.1156))
}
pi
yy <- tmp_foo(pi)
plot(D_pi ~ pi)
abline(yy ~ pi)
yy
plot(D_pi ~ pi)
lines(yy ~ pi)
stat_table
pi_log <- log(stat_table$p_i)
Ni_log <- stat_table$f_i
piNi_log <- pi_log * Ni_log
D_pi_log <- log(stat_table$D_i)
D_pi_Ni_log <- D_pi_log * Ni_log
pi_2_Ni_log <- pi_log^2 * Ni_log
D_pi_pi_Ni_log <- D_pi_Ni_log * pi_log
prep_log <- data.frame(  pi_log = pi_log,Ni_log = Ni_log,piNi_log = piNi_log,
D_pi_log = D_pi_log, D_pi_Ni_log = D_pi_Ni_log,
pi_2_Ni_log = pi_2_Ni_log,
D_pi_pi_Ni_log = D_pi_pi_Ni_log)
prep_log
a_zv_log <- ( sum(D_pi_pi_Ni_log) - ( (1/n) * sum(piNi_log) * sum(D_pi_Ni_log)) )/
( sum(pi_2_Ni_log) - n * (sum(piNi_log)/n)^2)
a_zv_log
b_zv_log <- sum(D_pi_Ni_log)/n
b_zv_log
d_zv_log <- b_zv_log - a_zv_log * sum(piNi_log)/n
d_zv_log
d_zv_log <- exp(b_zv_log - a_zv_log * sum(piNi_log)/n)
d_zv_log
d_s_sayta <- exp(1/n * sum(D_pi_Ni_log) -
a_zv_log/n * sum(piNi_log))
d_s_sayta
tmp_foo <- function(p)
{
return(d_s_sayta * p^(a_zv_log))
}
yy <- tmp_foo(pi)
plot(D_pi ~ pi)
lines(yy ~ pi)
plot(D_pi ~ pi)
lines(yy ~ pi, col = "red")
abline(lm(D_pi ~ pi, prep), col = "green")
