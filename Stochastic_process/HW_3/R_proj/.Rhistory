corrplot(M, method="color", order = "hclust", hclust.method = "mcquitty",tl.pos='n')
corrplot(M, method="color", order = "hclust", hclust.method = "median",tl.pos='n')
corrplot(M, method="color", order = "hclust", hclust.method = "centroid",tl.pos='n')
M[M<0]
count(M[M<0])
length(M[M<0])
length(M[M>0])
length(M)
M_negative
M_negative <- length(M[M<0])
M_negative
M_negative_perc <- M_negative / length(M)
M_negative_perc
M_negative_perc
length(M)
201*201
M_negative <- length(M[M<0])
M_negative # Число отрицательных коэффициентов корреляции
length(M) # Количество элементов в корреляционной матрице (201*201)
M_negative_perc <- M_negative / length(M)
M_negative_perc # Процент отрицательных элементов
library(rsconnect)
Sys.setlocale(locale="en_US.UTF-8")
rsconnect::setAccountInfo(name='hazirliver',token='2E064CFD3CB4A9E25774670094962F12',secret='5XXgH3XjPW8Iq1r5SADIHd0hd1G/4HptlaZQX/fk')
rsconnect::deployApp('./')
rsconnect::deployApp('./shinyapp')
rsconnect::deployApp('./shinyapp')
rsconnect::deployApp('./shinyapp')
rsconnect::deployApp('./shinyapp')
install.packages("V8")
library(V8)
rsconnect::deployApp('./shinyapp')
library(rsconnect)
rsconnect::setAccountInfo(name='hazirliver',token='2E064CFD3CB4A9E25774670094962F12',secret='5XXgH3XjPW8Iq1r5SADIHd0hd1G/4HptlaZQX/fk')
rsconnect::deployApp('./shinyapp')
rsconnect::deployApp('./shinyapp')
rsconnect::deployApp('./shinyapp')
# INTERVAL [0;T] == [0;10]
# STEP == 0.05
# NUMBER n = 160
# EXPECTED VALUE m(t) = 1 + exp(-t)
# COVAR FUNC = 2*exp(-abs(tau)/2)
addTaskCallback(function(...) {set.seed(1337);TRUE})
Tt <- 10
Hh <- 0.05
N <- 160
Mm <- function(t) {1 + exp(-t)}
covar <- function(t_1,t_2) {2*exp(-abs(t_2 - t_1)/2)}
Nn <- Tt/Hh
kh <- seq(0,Tt,Hh)
vect_expected <- Mm(kh)
Sigma_mat <- outer(kh,kh, FUN = covar)
eps <- rnorm(Nn+1, mean = 0, sd = 1)
eps
L <- t(chol(Sigma_mat))
eta <- as.numeric(L %*% eps)
ksi <- vect_expected + eta
trajectories <- function(Tt, Hh)
{
Nn <- Tt/Hh
kh <- seq(0,Tt,Hh)
vect_expected <- Mm(kh)
Sigma_mat <- outer(kh,kh, FUN = covar)
eps <- rnorm(Nn+1, mean = 0, sd = 1)
L <- t(chol(Sigma_mat))
eta <- as.numeric(L %*% eps)
ksi <- vect_expected + eta
return(ksi)
}
### Реплецирование
traj_list <- replicate(N, trajectories(Tt, Hh), simplify = F)
################################################################
############################t1 = 1, t2 = 2
t1 <- 1
t2 <- 2
selected_cut <- as.data.frame(matrix(c(sapply(traj_list, `[[`, t1),
sapply(traj_list, `[[`, t2)),
ncol = 2, byrow = F))
colnames(selected_cut) <- c("t1","t2")
head(selected_cut)
round(traj_list[[1]],3)
library(ggplot2)
traj_1 <- round(traj_list[[1]],3)
traj_1_pl <- ggplot(aes(x=kh)) + geom_line(traj_1)
traj_1_pl <- ggplot(aes(x=kh)) + geom_line(aes(y=traj_1))
traj_1 <- data.frame(x = kh, exp_val = vect_expected,
traj = round(traj_list[[1]],3))
traj_1
traj_1_pl <- ggplot(data = traj_1, aes(x=x)) + geom_line(aes(y=traj_1))
traj_1_pl
traj_1_pl <- ggplot(data = traj_1, aes(x=x)) + geom_line(aes(y=vect_expected))
traj_1_pl
traj_1_pl <- ggplot(data = traj_1, aes(x=x)) + geom_line(aes(y=exp_val)) +
geom_line(aes(y=traj))
traj_1_pl
traj_98 <- data.frame(x = kh, exp_val = vect_expected,
traj = round(traj_list[[98]],3))
traj_155 <- data.frame(x = kh, exp_val = vect_expected,
traj = round(traj_list[[155]],3))
## График 1,98,155 траекторий
trajs <- data.frame(x = kh, exp_val = vect_expected,
traj_1 = round(traj_list[[1]],3),
traj_98 = round(traj_list[[98]],3),
traj_155 = round(round(traj_list[[155]],3)))
trajs
## График 1,98,155 траекторий
trajs <- data.frame(x = kh, exp_val = vect_expected,
traj_1 = round(traj_list[[1]],3),
traj_98 = round(traj_list[[98]],3),
traj_155 = round(traj_list[[155]],3))
trajs
trajs_pl <- ggplot(data = traj_1, aes(x=x)) + geom_line(aes(y=exp_val)) +
geom_line(aes(y=traj_1)) +
geom_line(aes(y=traj_98)) +
geom_line(aes(y=traj_155))
trajs_pl
trajs_pl <- ggplot(data = trajs, aes(x=x)) + geom_line(aes(y=exp_val)) +
geom_line(aes(y=traj_1)) +
geom_line(aes(y=traj_98)) +
geom_line(aes(y=traj_155))
trajs_pl
trajs_pl <- ggplot(data = trajs, aes(x=x)) + geom_line(aes(y=exp_val,colour="#4cff79")) +
geom_line(aes(y=traj_1,colour="#ff584c")) +
geom_line(aes(y=traj_98,colour="#ffb14c")) +
geom_line(aes(y=traj_155,colour="#614cff"))
trajs_pl
trajs_pl <- ggplot(data = trajs, aes(x=x)) + geom_line(aes(y=exp_val,colour="#4cff79")) +
geom_line(aes(y=traj_1,colour="#ff584c")) +
geom_line(aes(y=traj_98,colour="#ffb14c")) +
geom_line(aes(y=traj_155,colour="#614cff")) +
scale_color_discrete(name = "",
labels = c("Expected values",
"Trajectory 1",
"Trajectory 98",
"Trajectory 155"))
trajs_pl
trajs_pl <- ggplot(data = trajs, aes(x=x)) + geom_line(aes(y=exp_val,colour="#4cff79", lty = 2)) +
geom_line(aes(y=traj_1,colour="#ff584c")) +
geom_line(aes(y=traj_98,colour="#ffb14c")) +
geom_line(aes(y=traj_155,colour="#614cff")) +
scale_color_discrete(name = "",
labels = c("Expected values",
"Trajectory 1",
"Trajectory 98",
"Trajectory 155"))
trajs_pl
trajs_pl <- ggplot(data = trajs, aes(x=x)) + geom_line(aes(y=exp_val,colour="#4cff79"), lty = 2) +
geom_line(aes(y=traj_1,colour="#ff584c")) +
geom_line(aes(y=traj_98,colour="#ffb14c")) +
geom_line(aes(y=traj_155,colour="#614cff")) +
scale_color_discrete(name = "",
labels = c("Expected values",
"Trajectory 1",
"Trajectory 98",
"Trajectory 155"))
trajs_pl
trajs_pl <- ggplot(data = trajs, aes(x=x)) + geom_line(aes(y=exp_val,colour="#4cff79"), lty = 2, lwd = 3) +
geom_line(aes(y=traj_1,colour="#ff584c")) +
geom_line(aes(y=traj_98,colour="#ffb14c")) +
geom_line(aes(y=traj_155,colour="#614cff")) +
scale_color_discrete(name = "",
labels = c("Expected values",
"Trajectory 1",
"Trajectory 98",
"Trajectory 155"))
trajs_pl
trajs_pl <- ggplot(data = trajs, aes(x=x)) + geom_line(aes(y=exp_val,colour="#4cff79"), lty = 2, lwd = 2) +
geom_line(aes(y=traj_1,colour="#ff584c")) +
geom_line(aes(y=traj_98,colour="#ffb14c")) +
geom_line(aes(y=traj_155,colour="#614cff")) +
scale_color_discrete(name = "",
labels = c("Expected values",
"Trajectory 1",
"Trajectory 98",
"Trajectory 155"))
trajs_pl
trajs_pl <- ggplot(data = trajs, aes(x=x)) + geom_line(aes(y=exp_val,colour="#4cff79"), lty = 2, lwd = 2) +
geom_line(aes(y=traj_1,colour="#ff584c"), lwd = 1) +
geom_line(aes(y=traj_98,colour="#ffb14c"), lwd = 1.1) +
geom_line(aes(y=traj_155,colour="#614cff"), lwd = 1.2) +
scale_color_discrete(name = "",
labels = c("Expected values",
"Trajectory 1",
"Trajectory 98",
"Trajectory 155"))
trajs_pl
trajs_pl <- ggplot(data = trajs, aes(x=x)) + geom_line(aes(y=exp_val,colour="#4cff79"), lty = 2, lwd = 2) +
geom_line(aes(y=traj_1,colour="#ff584c"), lwd = 0.5) +
geom_line(aes(y=traj_98,colour="#ffb14c"), lwd = 1.1) +
geom_line(aes(y=traj_155,colour="#614cff"), lwd = 1.2) +
scale_color_discrete(name = "",
labels = c("Expected values",
"Trajectory 1",
"Trajectory 98",
"Trajectory 155"))
trajs_pl
trajs_pl <- ggplot(data = trajs, aes(x=x)) + geom_line(aes(y=exp_val,colour="#4cff79"), lty = 2, lwd = 2) +
geom_line(aes(y=traj_1,colour="#ff584c"), lwd = 0.5) +
geom_line(aes(y=traj_98,colour="#ffb14c"), lwd = 0.6) +
geom_line(aes(y=traj_155,colour="#614cff"), lwd = 0.7) +
scale_color_discrete(name = "",
labels = c("Expected values",
"Trajectory 1",
"Trajectory 98",
"Trajectory 155"))
trajs_pl
trajs_pl <- ggplot(data = trajs, aes(x=x)) +
geom_line(aes(y=exp_val,colour="#4cff79"), lty = 2, lwd = 2) +
geom_line(aes(y=traj_1,colour="#ff584c"), lwd = 0.5) +
geom_line(aes(y=traj_98,colour="#ffb14c"), lwd = 0.6) +
geom_line(aes(y=traj_155,colour="#614cff"), lwd = 0.7) +
scale_color_discrete(name = "",
labels = c("Expected values",
"Trajectory 1",
"Trajectory 98",
"Trajectory 155")) +
theme_linedraw()
trajs_pl
trajs_pl <- ggplot(data = trajs, aes(x=x)) +
geom_line(aes(y=exp_val,colour="#4cff79"), lty = 2, lwd = 2) +
geom_line(aes(y=traj_1,colour="#ff584c"), lwd = 0.5) +
geom_line(aes(y=traj_98,colour="#ffb14c"), lwd = 0.6) +
geom_line(aes(y=traj_155,colour="#614cff"), lwd = 0.7) +
scale_color_discrete(name = "",
labels = c("Expected values",
"Trajectory 1",
"Trajectory 98",
"Trajectory 155")) +
theme_light()
trajs_pl
trajs_pl <- ggplot(data = trajs, aes(x=x)) +
geom_line(aes(y=exp_val,colour="#4cff79"), lty = 2, lwd = 2) +
geom_line(aes(y=traj_1,colour="#ff584c"), lwd = 0.5) +
geom_line(aes(y=traj_98,colour="#ffb14c"), lwd = 0.6) +
geom_line(aes(y=traj_155,colour="#614cff"), lwd = 0.7) +
scale_color_discrete(name = "",
labels = c("Expected values",
"Trajectory 1",
"Trajectory 98",
"Trajectory 155")) +
theme_void()
trajs_pl
trajs_pl <- ggplot(data = trajs, aes(x=x)) +
geom_line(aes(y=exp_val,colour="#4cff79"), lty = 2, lwd = 2) +
geom_line(aes(y=traj_1,colour="#ff584c"), lwd = 0.5) +
geom_line(aes(y=traj_98,colour="#ffb14c"), lwd = 0.6) +
geom_line(aes(y=traj_155,colour="#614cff"), lwd = 0.7) +
scale_color_discrete(name = "",
labels = c("Expected values",
"Trajectory 1",
"Trajectory 98",
"Trajectory 155")) +
theme_classic()
trajs_pl
################################################################
############################t1 = 1, t2 = 2
t1 <- 1
t2 <- 2
selected_cut <- as.data.frame(matrix(c(sapply(traj_list, `[[`, t1),
sapply(traj_list, `[[`, t2)),
ncol = 2, byrow = F))
colnames(selected_cut) <- c("t1","t2")
head(selected_cut)
ggplot(selected_cut, aes(x = t1, y = t2)) + geom_point() +
labs(title = "Scatter plot",
subtitle = "t1 = 1, t2 = 2",
x = "", y = "") +
theme(plot.title = element_text(hjust=0.5))
cor_test <- cor.test(selected_cut$t1, selected_cut$t2,
method = "pearson")
cor_test
Sigma_mat[1,2]
r_tr <- Sigma_mat[1,2]/(Sigma_mat[1,1] * Sigma_mat[2,2])
r_tr
r_tr <- Sigma_mat[1,2]/sqrt(Sigma_mat[1,1] * Sigma_mat[2,2])
r_tr
library("psych")
cor_test$estimate
paired.r(as.numeric(cor_test$estimate), r_tr)
paired.r(as.numeric(cor_test$estimate), r_tr, n=n)
paired.r(as.numeric(cor_test$estimate), r_tr, n=Nn)
png(filename = "../img/1.png",
width = 1920, height = 1080,
res = 96 * 3)
trajs_pl
dev.off()
################################################################
############################t1 = 1, t2 = 2
t1 <- 1
t2 <- 2
selected_cut <- as.data.frame(matrix(c(sapply(traj_list, `[[`, t1),
sapply(traj_list, `[[`, t2)),
ncol = 2, byrow = F))
colnames(selected_cut) <- c("t1","t2")
head(selected_cut)
png(filename = "../img/1.png",
width = 1920, height = 1080,
res = 96 * 3)
ggplot(selected_cut, aes(x = t1, y = t2)) + geom_point() +
labs(title = "Scatter plot",
subtitle = "t1 = 1, t2 = 2",
x = "", y = "") +
theme(plot.title = element_text(hjust=0.5))
dev.off()
png(filename = "../img/trajs.png",
width = 1920, height = 1080,
res = 96 * 3)
trajs_pl
dev.off()
trajs_pl <- ggplot(data = trajs, aes(x=x)) +
geom_line(aes(y=exp_val,colour="#4cff79"), lty = 2, lwd = 2) +
geom_line(aes(y=traj_1,colour="#ff584c"), lwd = 0.5) +
geom_line(aes(y=traj_98,colour="#ffb14c"), lwd = 0.6) +
geom_line(aes(y=traj_155,colour="#614cff"), lwd = 0.7) +
scale_color_discrete(name = "",
labels = c("Expected values",
"Trajectory 1",
"Trajectory 98",
"Trajectory 155")) +
labs(x = "", y = "")+
theme_classic()
png(filename = "../img/trajs.png",
width = 1920, height = 1080,
res = 96 * 3)
trajs_pl
dev.off()
trajs_pl <- ggplot(data = trajs, aes(x=x)) +
geom_line(aes(y=exp_val,colour="#4cff79"), lty = 2, lwd = 1.5) +
geom_line(aes(y=traj_1,colour="#ff584c"), lwd = 0.5) +
geom_line(aes(y=traj_98,colour="#ffb14c"), lwd = 0.6) +
geom_line(aes(y=traj_155,colour="#614cff"), lwd = 0.7) +
scale_color_discrete(name = "",
labels = c("Expected values",
"Trajectory 1",
"Trajectory 98",
"Trajectory 155")) +
labs(x = "", y = "")+
theme_classic()
png(filename = "../img/trajs.png",
width = 1920, height = 1080,
res = 96 * 3)
trajs_pl
dev.off()
trajs_pl <- ggplot(data = trajs, aes(x=x)) +
geom_line(aes(y=exp_val,colour="#4cff79"), lty = 2, lwd = 1.5) +
geom_line(aes(y=traj_1,colour="#ff584c"), lwd = 0.5) +
geom_line(aes(y=traj_98,colour="#ffb14c"), lwd = 0.6) +
geom_line(aes(y=traj_155,colour="#614cff"), lwd = 0.7) +
scale_color_discrete(name = "",
labels = c("Expected value",
"Trajectory 1",
"Trajectory 98",
"Trajectory 155")) +
labs(x = "", y = "")+
theme_classic()
png(filename = "../img/trajs.png",
width = 1920, height = 1080,
res = 96 * 3)
trajs_pl
dev.off()
r_tr <- Sigma_mat[1,2]/sqrt(Sigma_mat[1,1] * Sigma_mat[2,2])
r_tr
cor_test
cor_test <- cor.test(selected_cut$t1, selected_cut$t2,
method = "spearman")
cor_test
cor_test <- cor.test(selected_cut$t1, selected_cut$t2,
method = "kendall")
library(psychometric)
### Формирование аутпута
corr <- as.numeric(cor_test$estimate)
CIr(corr,Nn,0.95)
corr
################################################################
############################t1 = 1, t2 = 2
t1 <- 1
t2 <- 2
selected_cut <- as.data.frame(matrix(c(sapply(traj_list, `[[`, t1),
sapply(traj_list, `[[`, t2)),
ncol = 2, byrow = F))
colnames(selected_cut) <- c("t1","t2")
head(selected_cut)
ggplot(selected_cut, aes(x = t1, y = t2)) + geom_point() +
labs(title = "Scatter plot",
subtitle = "t1 = 1, t2 = 2",
x = "", y = "") +
theme(plot.title = element_text(hjust=0.5))
r <- (sum((selected_cut$t1 - mean(selected_cut$t1))*
(selected_cut$t2 - mean(selected_cut$t2))))/
(sqrt(sum((selected_cut$t1 - mean(selected_cut$t1))^2) *
sum((selected_cut$t2 - mean(selected_cut$t2))^2)))
r
cor_test <- cor.test(selected_cut$t1, selected_cut$t2,
method = "kendall")
r_tr <- Sigma_mat[1,2]/sqrt(Sigma_mat[1,1] * Sigma_mat[2,2])
r_tr
### Формирование аутпута
corr <- as.numeric(cor_test$estimate)
corr_LB <- cor_test$conf.int[1]
corr_UB <- cor_test$conf.int[2]
CIr(corr,Nn,0.95)
cor_test <- cor.test(selected_cut$t1, selected_cut$t2,
method = "pearson")
cor_test
### Формирование аутпута
corr <- as.numeric(cor_test$estimate)
corr_LB <- cor_test$conf.int[1]
corr_UB <- cor_test$conf.int[2]
corr
CIr(corr,Nn,0.95)
library(psychometric)
CIr(rv, n, 0.99)
rv <- 0.15
nnn <- 39
alpha <- 0.01
CIr(rv, n, 0.95)
rv <- 0.15
nnn <- 39
alpha <- 0.05
CIr_lower_bound <- tanh(atanh(rv) - rv/(2*(n-1))
- qnorm(1-alpha/2)/sqrt(n-3))
CIr_lower_bound
CIr_upper_bound <- tanh(atanh(rv) - rv/(2*(n-1))
+ qnorm(1-alpha/2)/sqrt(n-3))
CIr_upper_bound
rv <- 0.15
nnn <- 39
alpha <- 0.05
CIr_lower_bound <- tanh(atanh(rv) - rv/(2*(nnn-1))
- qnorm(1-alpha/2)/sqrt(nnn-3))
CIr_lower_bound
CIr_upper_bound <- tanh(atanh(rv) - rv/(2*(nnn-1))
+ qnorm(1-alpha/2)/sqrt(nnn-3))
CIr_upper_bound
CIr(rv, n, 0.95)
CIr(rv, nnn, 0.95)
crit_mn1 <- tanh(qnorm(alpha)/sqrt(n-3))
crit_mn1 <- tanh(qnorm(alpha)/sqrt(nnn-3))
crit_mn1
crit_mn2 <- qt(alpha, nnn-2)/(sqrt(nnn-2+(qt(alpha, nnn-2))^2))
crit_mn2
CIr_lower_bound <- tanh(atanh(corr) - rv/(2*(Nn-1))
- qnorm(1-alpha/2)/sqrt(Nn-3))
CIr_lower_bound
r <- (sum((selected_cut$t1 - mean(selected_cut$t1))*
(selected_cut$t2 - mean(selected_cut$t2))))/
(sqrt(sum((selected_cut$t1 - mean(selected_cut$t1))^2) *
sum((selected_cut$t2 - mean(selected_cut$t2))^2)))
r
CIr(corr,Nn,0.95)
cor_test
CIr_lower_bound <- tanh(atanh(corr) - rv/(2*(Nn-1))
- qnorm(1-alpha/2)/sqrt(Nn-3))
CIr_lower_bound
CIr_upper_bound <- tanh(atanh(corr) - rv/(2*(nnn-1))
+ qnorm(1-alpha/2)/sqrt(nnn-3))
CIr_upper_bound
CIr(0.15,39,0.99)
CIr(corr,Nn,0.95)
r_tr <- Sigma_mat[20,150]/sqrt(Sigma_mat[20,20] * Sigma_mat[150,150])
r_tr
################################################################
############################t1 = 20, t2 = 150
t1 <- 20
t2 <- 150
selected_cut <- as.data.frame(matrix(c(sapply(traj_list, `[[`, t1),
sapply(traj_list, `[[`, t2)),
ncol = 2, byrow = F))
colnames(selected_cut) <- c("t1","t2")
head(selected_cut)
ggplot(selected_cut, aes(x = t1, y = t2)) + geom_point() +
labs(title = "Scatter plot",
subtitle = "t1 = 20, t2 = 150",
x = "", y = "") +
theme(plot.title = element_text(hjust=0.5))
cor_test <- cor.test(selected_cut$t1, selected_cut$t2,
method = "pearson")
cor_test
r_tr <- Sigma_mat[20,150]/sqrt(Sigma_mat[20,20] * Sigma_mat[150,150])
r_tr
################################################################
############################t1 = 130, t2 = 155
t1 <- 130
t2 <- 155
selected_cut <- as.data.frame(matrix(c(sapply(traj_list, `[[`, t1),
sapply(traj_list, `[[`, t2)),
ncol = 2, byrow = F))
colnames(selected_cut) <- c("t1","t2")
head(selected_cut)
ggplot(selected_cut, aes(x = t1, y = t2)) + geom_point() +
labs(title = "Scatter plot",
subtitle = "t1 = 130, t2 = 155",
x = "", y = "") +
theme(plot.title = element_text(hjust=0.5))
cor_test <- cor.test(selected_cut$t1, selected_cut$t2)
cor_test
r_tr <- Sigma_mat[130,155]/sqrt(Sigma_mat[130,130] * Sigma_mat[155,155])
r_tr
P <- matrix(c(0,0.5,0.5,
0.5,0,0.5,
0.5,0.5,0)
,ncol = 3, byrow = T)
P
P^4
P^2
P %*% P
X = P %*% P
p_v_4 = X %*% X
p_v_4
P
X
p_v_4
