# INTERVAL [0;T] == [0;10]
# STEP == 0.05
# NUMBER n = 160
# EXPECTED VALUE m(t) = 1 + exp(-t)
# COVAR FUNC = 2*exp(-abs(tau)/2)
set.seed(1337)
library(ggplot2)
###INITIAL DATA###


Tt <- 10
Hh <- 0.05
N <- 160

Mm <- function(t) {1 + exp(-t)}
covar <- function(t_1,t_2) {2*exp(-abs(t_2 - t_1)/2)}



trajectories <- function(Tt, Hh)
{
  Nn <- Tt/Hh + 1
  vect <- runif(Nn)
  vect_expected <- Mm(vect)
  Sigma_mat <- outer(vect,vect,FUN = covar)
  eps <- runif(Nn)
  L <- t(chol(Sigma_mat))
  eta <- as.numeric(L %*% eps)
  ksi <- vect + eta
  return(ksi)
}


traj_list <- replicate(N, trajectories(10, 0.05), simplify = F)

cuts <- function(traj_list, t1, t2)
{
  selected_cut <- as.data.frame(matrix(c(sapply(traj_list, `[[`, t1), sapply(traj_list, `[[`, t2)),
                       ncol = 2, byrow = F))
  scatter_plot <- ggplot(selected_cut, aes(x = V1, y = V2)) + geom_point()
  cor_test <- cor.test(selected_cut$V1, selected_cut$V2)
  
  output <- list(matr = selected_cut, scatter = scatter_plot,
                 corr = cor_test)
  return(output)
}


corr <- cuts(traj_list, t_1, t_2)$corr
corr_LB <- tmp$corr$conf.int[1]
corr_UB <- tmp$corr$conf.int[2]

output <- c(corr, corr_LB, corr_UB)
##########################################









###########################################
main_func <- function(Tt, Hh, N, t1, t2)
{
  ### Функция моделирования одной траектории
  trajectories <- function(Tt, Hh)
  {
    Nn <- Tt/Hh + 1
    vect <- runif(Nn)
    vect_expected <- Mm(vect)
    Sigma_mat <- outer(vect,vect,FUN = covar)
    eps <- runif(Nn)
    L <- t(chol(Sigma_mat))
    eta <- as.numeric(L %*% eps)
    ksi <- vect + eta
    return(ksi)
  }
  
  ### Реплецирование
  traj_list <- replicate(N, trajectories(Tt, Hh), simplify = F)
  
  ### Построение сечений с рассчетами corr, UB, LB
  selected_cut <- as.data.frame(matrix(c(sapply(traj_list, `[[`, t1), sapply(traj_list, `[[`, t2)),
                                       ncol = 2, byrow = F))
  scatter_plot <- ggplot(selected_cut, aes(x = V1, y = V2)) + geom_point()
  cor_test <- cor.test(selected_cut$V1, selected_cut$V2)
  
  output <- list(matr = selected_cut, scatter = scatter_plot,
                 corr = cor_test)
  
  ### Формирование аутпута
  corr <- as.numeric(output$corr$estimate)
  corr_LB <- output$corr$conf.int[1]
  corr_UB <- output$corr$conf.int[2]
  
  output_main <- c(corr, corr_LB, corr_UB)

  return(output_main)
}

t1_t2_matr <- data.frame(t1 = c(1, 100, 3), 
                         t2 = c(2, 110, 150))



out <- rep(NA,5)
for (i in 1:dim(t1_t2_matr)[1])
{
  tmp <- main_func(Tt = 10, Hh = 0.05, N = 160, t1 = t1_t2_matr[i,1], t2 = t1_t2_matr[i,2])
  oooout <- c(t1 = t1_t2_matr[i,1],
                       t2 = t1_t2_matr[i,2],
                       r = tmp[1],
                       r_LB = tmp[2],
                       r_UB = tmp[3])
  out <- rbind(out, oooout)
}

main_func(Tt = 10, Hh = 0.05, N = 160, t1 = 1, t2 = 2)




############################################

###

tmp <- cuts(traj_list, 1, 2)

as.numeric(tmp$corr$estimate)
tmp$corr$conf.int[2]

selected_cut <- as.data.frame(matrix(c(sapply(traj_list, `[[`, 1), sapply(traj_list, `[[`, 2)),
                                     ncol = 2, byrow = F))
scatter_plot <- ggplot(selected_cut, aes(x = V1, y = V2)) + geom_point()
cor_test <- cor.test(first_traj[,1], first_traj[,2])



first_traj <- matrix(c(sapply(traj_list, `[[`, 1), sapply(traj_list, `[[`, 2)),
                     ncol = 2, byrow = F)

plot(first_traj)

cor.test(first_traj[,1], first_traj[,2])

#




































###1###


 #%vect_dim <- length(vect)

Nn <- Tt/Hh + 1
vect <- runif(Nn)


###2###


vect_expected <- Mm(vect) # Вектор матожиданий

Sigma_mat <- outer(vect,vect,FUN = covar) # Внешнее произведение с собственной функцией


###3###


eps <- runif(Nn)


###4###


L <- t(chol(Sigma_mat))

eta <- as.numeric(L %*% eps)

###5###


ksi <- vect + eta
