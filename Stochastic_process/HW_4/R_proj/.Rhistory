}
sq.vars <- t(sapply(pairs.list, function(x) apply(x, 2, sq.var_foo)))
head(sq.vars,5)
tail(sq.vars,5)
mean_sq.vars <- colMeans(sq.vars)
mean_sq.vars
source("./h_dvd_2.R", echo = T)
compare_table
compare_table
compare_table.rel
euc_metric <- function(y)
{
sqrt(y[1]^2 + y[2]^2)
}
euc_metric(pairs.list[[160]][201,])
sapply(pairs.list, euc_metric)
t(sapply(pairs.list, function(x) apply(x, 1, euc_metric)))
Map(euc_metric, pairs.list)
pairs.list[[160]]
tmp <- c(-0.09555982, -0.016195978)
euc_metric(tmp)
lapply(pairs.list, euc_metric)
euc_metric <- function(y)
{
sqrt(y[N+1,1]^2 + y[N+1,2]^2)
}
lapply(pairs.list, euc_metric)
euc_metric <- function(y)
{
sqrt(y[N,1]^2 + y[N,2]^2)
}
lapply(pairs.list, euc_metric)
lapply(pairs.list, function(x) apply(pairs.list, 1, euc_metric))
lapply(pairs.list, function(x) apply(x, 1, euc_metric))
dist(pairs.list[[160]][201,])
View(euc_metric)
View(euc_metric)
euc_metric <- function(y)
{
sqrt(y[1]^2 + y[2]^2)
}
euc_metric(pairs.list[[160]][201,])
dist(pairs.list[[160]][201,], 0)
dist(c(pairs.list[[160]][201,], 0))
dist(c(pairs.list[[160]][201,], 0))
euc_metric <- function(y)
{
sqrt(sum(y^2))
}
euc_metric(pairs.list[[160]][201,])
dist(pairs.list[[160]][201,])
pairs.list[[160]][201,]
sqrt((-2.3545985)^2 + (-0.9659423)^2)
euc_metric <- function(y)
{
sqrt(sum(y^2))
}
lapply(pairs.list, function(x) apply(x, 1, euc_metric))
euc_metric <- function(y)
{
sqrt(sum(y[c(N+1, N)]^2))
}
lapply(pairs.list, function(x) apply(x, 1, euc_metric))
euc_metric <- function(y)
{
sqrt(sum(y^2))
}
lapply(pairs.list, function(x) apply(x[c(N,N+1),], 1, euc_metric))
lapply(pairs.list, function(x) apply(x[c(N,N+1)], 1, euc_metric))
lapply(pairs.list, function(x) apply(x, 1, euc_metric))
lapply(pairs.list, function(x) apply(x[1], 1, euc_metric))
lapply(pairs.list, function(x) apply(x[1,1], 1, euc_metric))
lapply(pairs.list, function(x) apply(x[[1]], 1, euc_metric))
lapply(pairs.list, function(x) apply(x[,1], 1, euc_metric))
lapply(pairs.list, function(x) apply(x[,1], 1, euc_metric))
lapply(pairs.list, dist)
Map(euc_metric, pairs.list)
Map(euc_metric, pairs.list[1])
Map(euc_metric, pairs.list[160])
Map(euc_metric, pairs.list[160,])
Map(euc_metric, pairs.list[16,])
euc_metric <- function(y)
{
sqrt(sum(y[c(N,N+1),]^2))
}
Map(euc_metric, pairs.list)
c(N,N+1)
euc_metric <- function(y)
{
sqrt(sum(y[c((N/2),(N/2)+1),]^2))
}
lapply(pairs.list, function(x) apply(x[,1], 1, euc_metric))
Map(euc_metric, pairs.list)
lapply(pairs.list, function(x) apply(x[,1], 1, euc_metric))
euc_metric(pairs.list[[160]][201,])
euc_metric(pairs.list[[160]])
Map(euc_metric, pairs.list)
pairs.list[[160]][201,]
sqrt((-2.3545985)^2 + (-0.9659423)^2)
euc_metric <- function(y)
{
sqrt(sum(y[(N/2)+1,]^2))
}
Map(euc_metric, pairs.list)
euc_metric(pairs.list[[160]][201,])
sqrt((-2.3545985)^2 + (-0.9659423)^2)
as.numeric(Map(euc_metric, pairs.list))
z_sc <- as.numeric(Map(euc_metric, pairs.list))
length(z_sc[z_sc > z])
pos <- length(z_sc[z_sc > z])
z.prob <- pos/((N/2)+1)
z.prob
pos
euc_metric <- function(y)
{
sqrt(sum(y[length(y),]^2))
}
as.numeric(Map(euc_metric, pairs.list))
euc_metric <- function(y)
{
sqrt(sum(y[dim(y)[1],]^2))
}
z.sc <- as.numeric(Map(euc_metric, pairs.list))
z.sc
z.sc.extnd <- as.numeric(Map(euc_metric, pairs.extnd.list))
pos.sc <- length(z_sc[z_sc > z])
z.prob <- pos.sc/((N/2)+1)
pos.sc.extnd <- length(z.sc.extnd[z.sc.extnd > z])
pos.sc.extnd
z.sc.extnd
euc_metric <- function(y)
{
sqrt(sum(y[dim(y)[2],]^2))
}
as.numeric(Map(euc_metric, pairs.list))
euc_metric <- function(y)
{
sqrt(sum(y[dim(y)[1],]^2))
}
z.sc <- as.numeric(Map(euc_metric, pairs.list))
pos.sc <- length(z_sc[z_sc > z])
z.prob <- pos.sc/((N/2)+1)
z.sc.extnd <- as.numeric(Map(euc_metric, pairs.extnd.list))
pos.sc.extnd <- length(z.sc.extnd[z.sc.extnd > z])
pos.sc.extnd
plot(pairs.list[[1]], type = "l", main = "Trajectory 6, h = 0.02",
xlab = "", ylab = "", xlim = c(-3, 3), ylim = c(-3,3))
plot(pairs.list[[1]], type = "l", main = "Trajectory 1, h = 0.02",
xlab = "", ylab = "", xlim = c(-3, 3), ylim = c(-3,3))
draw.circle(0,0,0.025)
draw.circle(0,0,2.5)
plot(pairs.list[[1]], type = "l", main = "Trajectory 1, h = 0.02",
xlab = "", ylab = "", xlim = c(-3, 3), ylim = c(-3,3))
draw.circle(0,0,2.5)
grid()
plot(pairs.list[[160]], type = "l", main = "Trajectory 1, h = 0.02",
xlab = "", ylab = "", xlim = c(-3, 3), ylim = c(-3,3))
draw.circle(0,0,2.5)
z.sc
pairs.list[[159]][201,]
euc_metric(pairs.list[[159]][201,])
euc_metric(pairs.list[[159]])
((1.4430105)^2 + (-0.5329736)^2)
sqrt((1.4430105)^2 + (-0.5329736)^2)
plot(pairs.list[[160]], type = "l", main = "Trajectory 1, h = 0.02",
xlab = "", ylab = "", xlim = c(-5, 5), ylim = c(-5,5))
draw.circle(0,0,2.5)
draw.circle(0,0,2.5)
plot(pairs.list[[160]], type = "l", main = "Trajectory 1, h = 0.02",
xlab = "", ylab = "", xlim = c(-5, 5), ylim = c(-5,5))
draw.circle(0,0,2.5, nv = 1000)
plot(pairs.list[[160]], type = "l", main = "Trajectory 1, h = 0.02",
xlab = "", ylab = "", xlim = c(-5, 5), ylim = c(-5,5), asp = 1)
draw.circle(0,0,2.5, nv = 1000)
plot(pairs.list[[160]], type = "l", main = "Trajectory 1, h = 0.02",
xlab = "", ylab = "", xlim = c(-3, 3), ylim = c(-3,3), asp = 1)
draw.circle(0,0,2.5, nv = 1000)
plot(pairs.list[[160]], type = "l", main = "Trajectory 1, h = 0.02",
xlab = "", ylab = "", xlim = c(-1.5, 1.5), ylim = c(-3,3), asp = 1)
draw.circle(0,0,2.5, nv = 1000)
plot(pairs.list[[160]], type = "l", main = "Trajectory 1, h = 0.02",
xlab = "", ylab = "", xlim = c(-1.5, 1.5), ylim = c(-3,3), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 3, col = "red")
plot(pairs.list[[160]], type = "l", main = "Trajectory 1, h = 0.02",
xlab = "", ylab = "", xlim = c(-1.5, 1.5), ylim = c(-3,3), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 3, border = "red")
grid()
MASS::eqscplot(pairs.list[[160]], type = "l", main = "Trajectory 1, h = 0.02",
xlab = "", ylab = "", xlim = c(-1.5, 1.5), ylim = c(-3,3),
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 3, border = "red")
grid()
MASS::eqscplot(pairs.list[[160]], type = "l", main = "Trajectory 1, h = 0.02",
xlab = "", ylab = "", xlim = c(-1.5, 1.5), ylim = c(-3,3), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 3, border = "red")
grid()
MASS::eqscplot(pairs.list[[160]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-1.5, 1.5), ylim = c(-3,3), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
grid()
MASS::eqscplot(pairs.list[[160]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-1.5, 1.5), ylim = c(-2,2), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
grid()
MASS::eqscplot(pairs.list[[160]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-1.5, 1.5), ylim = c(-2.6,2.6), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
MASS::eqscplot(pairs.list[[160]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-1.5, 1.5), ylim = c(-2.6,2.6), asp = 2,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
MASS::eqscplot(pairs.list[[160]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-1.5, 1.5), ylim = c(-2.6,2.6), asp = .5,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
MASS::eqscplot(pairs.list[[160]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-1.5, 1.5), ylim = c(-2.6,2.6), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
grid()
MASS::eqscplot(pairs.list[[160]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-3, 3), ylim = c(-3,3), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
grid()
MASS::eqscplot(pairs.list[[1]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-3, 3), ylim = c(-3,3), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
grid()
z.sc
head(z.sc,5)
tail(z.sc,5)
pos.sc
z.prob
MASS::eqscplot(pairs.list[[1]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
grid()
MASS::eqscplot(pairs.list[[1]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
png(filename = "../img/2d_1_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[1]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
dev.off
png(filename = "../img/2d_6_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[6]], type = "l", main = "Trajectory 6, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
dev.off
png(filename = "../img/2d_70_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[70]], type = "l", main = "Trajectory 70, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
dev.off
png(filename = "../img/2d_140_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[140]], type = "l", main = "Trajectory 140, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
dev.off
png(filename = "../img/2d_1_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[1]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
dev.off
png(filename = "../img/2d_1_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[1]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
dev.off
png(filename = "../img/2d_1_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
dev.off
png(filename = "../img/2d_1_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[1]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
dev.off()
png(filename = "../img/2d_6_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[6]], type = "l", main = "Trajectory 6, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
dev.off()
png(filename = "../img/2d_70_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[70]], type = "l", main = "Trajectory 70, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
dev.off()
png(filename = "../img/2d_140_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[140]], type = "l", main = "Trajectory 140, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
dev.off()
points(pairs.list[[1]][(N/2)+1,])
MASS::eqscplot(pairs.list[[1]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
points(pairs.list[[1]][(N/2)+1,])
points(pairs.list[[1]][(N/2)+1,1], pairs.list[[1]][(N/2)+1,2])
MASS::eqscplot(pairs.list[[1]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
points(pairs.list[[1]][(N/2)+1,1], pairs.list[[1]][(N/2)+1,2])
MASS::eqscplot(pairs.list[[1]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
points(pairs.list[[1]][(N/2)+1,1], pairs.list[[1]][(N/2)+1,2],
lwd = 2, col = "green")
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
png(filename = "../img/2d_1_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[1]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
points(pairs.list[[1]][(N/2)+1,1], pairs.list[[1]][(N/2)+1,2],
lwd = 2, col = "green")
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
dev.off()
png(filename = "../img/2d_6_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[6]], type = "l", main = "Trajectory 6, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
points(pairs.list[[6]][(N/2)+1,1], pairs.list[[6]][(N/2)+1,2],
lwd = 2, col = "green")
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
dev.off()
png(filename = "../img/2d_70_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[70]], type = "l", main = "Trajectory 70, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
points(pairs.list[[70]][(N/2)+1,1], pairs.list[[70]][(N/2)+1,2],
lwd = 2, col = "green")
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
dev.off()
png(filename = "../img/2d_140_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[140]], type = "l", main = "Trajectory 140, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
points(pairs.list[[140]][(N/2)+1,1], pairs.list[[140]][(N/2)+1,2],
lwd = 2, col = "green")
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
dev.off()
points(pairs.list[[1]][(N/2)+1,1], pairs.list[[1]][(N/2)+1,2],
lwd = 2, col = "green", pch = 16)
png(filename = "../img/2d_1_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[1]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
points(pairs.list[[1]][(N/2)+1,1], pairs.list[[1]][(N/2)+1,2],
lwd = 2, col = "green", pch = 16)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
dev.off()
png(filename = "../img/2d_6_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[6]], type = "l", main = "Trajectory 6, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
points(pairs.list[[6]][(N/2)+1,1], pairs.list[[6]][(N/2)+1,2],
lwd = 2, col = "green", pch = 16)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
dev.off()
png(filename = "../img/2d_70_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[70]], type = "l", main = "Trajectory 70, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
points(pairs.list[[70]][(N/2)+1,1], pairs.list[[70]][(N/2)+1,2],
lwd = 2, col = "green", pch = 16)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
dev.off()
png(filename = "../img/2d_140_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[140]], type = "l", main = "Trajectory 140, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
points(pairs.list[[140]][(N/2)+1,1], pairs.list[[140]][(N/2)+1,2],
lwd = 2, col = "green", pch = 16)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
dev.off()
legend("topright", inset = 0.02, c("traj", "z = 2.5", "at time T"), l
ty = c(1,1,NA), lwd = c(2,2,2), pch = c(NA,NA,16))
legend("topright", inset = 0.02, c("traj", "z = 2.5", "at time T"),
lty = c(1,1,NA), lwd = c(2,2,2), pch = c(NA,NA,16))
legend("topright", inset = 0.02, c("traj", "z = 2.5", "at time T"),
lty = c(1,1,NA), lwd = c(2,2,2), pch = c(NA,NA,16), col= c("black", "red", "green"))
png(filename = "../img/2d_6_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[6]], type = "l", main = "Trajectory 6, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
points(pairs.list[[6]][(N/2)+1,1], pairs.list[[6]][(N/2)+1,2],
lwd = 2, col = "green", pch = 16)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
legend("topright", inset = 0.02, c("traj", "z = 2.5", "at time T"),
lty = c(1,1,NA), lwd = c(2,2,2), pch = c(NA,NA,16), col= c("black", "red", "green"))
dev.off()
png(filename = "../img/2d_70_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[70]], type = "l", main = "Trajectory 70, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
points(pairs.list[[70]][(N/2)+1,1], pairs.list[[70]][(N/2)+1,2],
lwd = 2, col = "green", pch = 16)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
legend("topright", inset = 0.02, c("traj", "z = 2.5", "at time T"),
lty = c(1,1,NA), lwd = c(2,2,2), pch = c(NA,NA,16), col= c("black", "red", "green"))
dev.off()
png(filename = "../img/2d_140_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[140]], type = "l", main = "Trajectory 140, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
points(pairs.list[[140]][(N/2)+1,1], pairs.list[[140]][(N/2)+1,2],
lwd = 2, col = "green", pch = 16)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
legend("topright", inset = 0.02, c("traj", "z = 2.5", "at time T"),
lty = c(1,1,NA), lwd = c(2,2,2), pch = c(NA,NA,16), col= c("black", "red", "green"))
dev.off()
euc_metric <- function(y)
{
sqrt(sum(y[dim(y)[1],]^2))
}
euc_metric <- function(y)
{
sqrt(sum(y[dim(y)[1],]^2))
}
z.sc <- as.numeric(Map(euc_metric, pairs.list))
head(z.sc,5)
tail(z.sc,5)
euc_metric <- function(y)
{
sqrt(sum(y[dim(y)[1],]^2))
}
z.sc <- as.numeric(Map(euc_metric, pairs.list))
head(z.sc,5)
tail(z.sc,5)
pos.sc <- length(z_sc[z_sc > z])
pos.sc
z.prob <- pos.sc/((N/2)+1)
z.prob
N/2
png(filename = "../img/2d_1_circle.png",
width = 1920, height = 1080,
res = 96 * 2)
MASS::eqscplot(pairs.list[[1]], type = "l", main = "Trajectory 1, h = 0.02, z = 2.5",
xlab = "", ylab = "", xlim = c(-z-0.5, z+0.5), ylim = c(-z-0.5,z+0.5), asp = 1,
lwd = 2)
points(pairs.list[[1]][(N/2)+1,1], pairs.list[[1]][(N/2)+1,2],
lwd = 2, col = "green", pch = 16)
draw.circle(0,0,2.5, nv = 1000, lwd = 2, border = "red")
legend("topright", inset = 0.02, c("traj", "z = 2.5", "at time T"),
lty = c(1,1,NA), lwd = c(2,2,2), pch = c(NA,NA,16), col= c("black", "red", "green"))
dev.off()
sqty(h)
sqrt(h)
sqrt(h)*0.75
